
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `AttachmentProvider` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model AttachmentProvider
 * 
 */
export type AttachmentProviderModel = runtime.Types.Result.DefaultSelection<Prisma.$AttachmentProviderPayload>

export type AggregateAttachmentProvider = {
  _count: AttachmentProviderCountAggregateOutputType | null
  _avg: AttachmentProviderAvgAggregateOutputType | null
  _sum: AttachmentProviderSumAggregateOutputType | null
  _min: AttachmentProviderMinAggregateOutputType | null
  _max: AttachmentProviderMaxAggregateOutputType | null
}

export type AttachmentProviderAvgAggregateOutputType = {
  size: number | null
}

export type AttachmentProviderSumAggregateOutputType = {
  size: bigint | null
}

export type AttachmentProviderMinAggregateOutputType = {
  id: string | null
  attachmentId: string | null
  provider: $Enums.Provider | null
  userKeyId: string | null
  keyFingerprint: string | null
  state: $Enums.ProviderAssetState | null
  providerUri: string | null
  providerRef: string | null
  mime: string | null
  size: bigint | null
  readyAt: Date | null
  expiresAt: Date | null
  lastCheckedAt: Date | null
  errorCode: string | null
  errorMessage: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type AttachmentProviderMaxAggregateOutputType = {
  id: string | null
  attachmentId: string | null
  provider: $Enums.Provider | null
  userKeyId: string | null
  keyFingerprint: string | null
  state: $Enums.ProviderAssetState | null
  providerUri: string | null
  providerRef: string | null
  mime: string | null
  size: bigint | null
  readyAt: Date | null
  expiresAt: Date | null
  lastCheckedAt: Date | null
  errorCode: string | null
  errorMessage: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type AttachmentProviderCountAggregateOutputType = {
  id: number
  attachmentId: number
  provider: number
  userKeyId: number
  keyFingerprint: number
  state: number
  providerUri: number
  providerRef: number
  mime: number
  size: number
  readyAt: number
  expiresAt: number
  lastCheckedAt: number
  errorCode: number
  errorMessage: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type AttachmentProviderAvgAggregateInputType = {
  size?: true
}

export type AttachmentProviderSumAggregateInputType = {
  size?: true
}

export type AttachmentProviderMinAggregateInputType = {
  id?: true
  attachmentId?: true
  provider?: true
  userKeyId?: true
  keyFingerprint?: true
  state?: true
  providerUri?: true
  providerRef?: true
  mime?: true
  size?: true
  readyAt?: true
  expiresAt?: true
  lastCheckedAt?: true
  errorCode?: true
  errorMessage?: true
  createdAt?: true
  updatedAt?: true
}

export type AttachmentProviderMaxAggregateInputType = {
  id?: true
  attachmentId?: true
  provider?: true
  userKeyId?: true
  keyFingerprint?: true
  state?: true
  providerUri?: true
  providerRef?: true
  mime?: true
  size?: true
  readyAt?: true
  expiresAt?: true
  lastCheckedAt?: true
  errorCode?: true
  errorMessage?: true
  createdAt?: true
  updatedAt?: true
}

export type AttachmentProviderCountAggregateInputType = {
  id?: true
  attachmentId?: true
  provider?: true
  userKeyId?: true
  keyFingerprint?: true
  state?: true
  providerUri?: true
  providerRef?: true
  mime?: true
  size?: true
  readyAt?: true
  expiresAt?: true
  lastCheckedAt?: true
  errorCode?: true
  errorMessage?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type AttachmentProviderAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which AttachmentProvider to aggregate.
   */
  where?: Prisma.AttachmentProviderWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AttachmentProviders to fetch.
   */
  orderBy?: Prisma.AttachmentProviderOrderByWithRelationInput | Prisma.AttachmentProviderOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.AttachmentProviderWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AttachmentProviders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AttachmentProviders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned AttachmentProviders
  **/
  _count?: true | AttachmentProviderCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: AttachmentProviderAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: AttachmentProviderSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AttachmentProviderMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AttachmentProviderMaxAggregateInputType
}

export type GetAttachmentProviderAggregateType<T extends AttachmentProviderAggregateArgs> = {
      [P in keyof T & keyof AggregateAttachmentProvider]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAttachmentProvider[P]>
    : Prisma.GetScalarType<T[P], AggregateAttachmentProvider[P]>
}




export type AttachmentProviderGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AttachmentProviderWhereInput
  orderBy?: Prisma.AttachmentProviderOrderByWithAggregationInput | Prisma.AttachmentProviderOrderByWithAggregationInput[]
  by: Prisma.AttachmentProviderScalarFieldEnum[] | Prisma.AttachmentProviderScalarFieldEnum
  having?: Prisma.AttachmentProviderScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AttachmentProviderCountAggregateInputType | true
  _avg?: AttachmentProviderAvgAggregateInputType
  _sum?: AttachmentProviderSumAggregateInputType
  _min?: AttachmentProviderMinAggregateInputType
  _max?: AttachmentProviderMaxAggregateInputType
}

export type AttachmentProviderGroupByOutputType = {
  id: string
  attachmentId: string
  provider: $Enums.Provider
  userKeyId: string | null
  keyFingerprint: string
  state: $Enums.ProviderAssetState
  providerUri: string | null
  providerRef: string | null
  mime: string | null
  size: bigint | null
  readyAt: Date | null
  expiresAt: Date | null
  lastCheckedAt: Date | null
  errorCode: string | null
  errorMessage: string | null
  createdAt: Date
  updatedAt: Date
  _count: AttachmentProviderCountAggregateOutputType | null
  _avg: AttachmentProviderAvgAggregateOutputType | null
  _sum: AttachmentProviderSumAggregateOutputType | null
  _min: AttachmentProviderMinAggregateOutputType | null
  _max: AttachmentProviderMaxAggregateOutputType | null
}

type GetAttachmentProviderGroupByPayload<T extends AttachmentProviderGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AttachmentProviderGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AttachmentProviderGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AttachmentProviderGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AttachmentProviderGroupByOutputType[P]>
      }
    >
  >



export type AttachmentProviderWhereInput = {
  AND?: Prisma.AttachmentProviderWhereInput | Prisma.AttachmentProviderWhereInput[]
  OR?: Prisma.AttachmentProviderWhereInput[]
  NOT?: Prisma.AttachmentProviderWhereInput | Prisma.AttachmentProviderWhereInput[]
  id?: Prisma.StringFilter<"AttachmentProvider"> | string
  attachmentId?: Prisma.StringFilter<"AttachmentProvider"> | string
  provider?: Prisma.EnumProviderFilter<"AttachmentProvider"> | $Enums.Provider
  userKeyId?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  keyFingerprint?: Prisma.StringFilter<"AttachmentProvider"> | string
  state?: Prisma.EnumProviderAssetStateFilter<"AttachmentProvider"> | $Enums.ProviderAssetState
  providerUri?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  providerRef?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  mime?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  size?: Prisma.BigIntNullableFilter<"AttachmentProvider"> | bigint | number | null
  readyAt?: Prisma.DateTimeNullableFilter<"AttachmentProvider"> | Date | string | null
  expiresAt?: Prisma.DateTimeNullableFilter<"AttachmentProvider"> | Date | string | null
  lastCheckedAt?: Prisma.DateTimeNullableFilter<"AttachmentProvider"> | Date | string | null
  errorCode?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  errorMessage?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  createdAt?: Prisma.DateTimeFilter<"AttachmentProvider"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"AttachmentProvider"> | Date | string
  attachment?: Prisma.XOR<Prisma.AttachmentScalarRelationFilter, Prisma.AttachmentWhereInput>
  userKey?: Prisma.XOR<Prisma.UserKeyNullableScalarRelationFilter, Prisma.UserKeyWhereInput> | null
}

export type AttachmentProviderOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  attachmentId?: Prisma.SortOrder
  provider?: Prisma.SortOrder
  userKeyId?: Prisma.SortOrderInput | Prisma.SortOrder
  keyFingerprint?: Prisma.SortOrder
  state?: Prisma.SortOrder
  providerUri?: Prisma.SortOrderInput | Prisma.SortOrder
  providerRef?: Prisma.SortOrderInput | Prisma.SortOrder
  mime?: Prisma.SortOrderInput | Prisma.SortOrder
  size?: Prisma.SortOrderInput | Prisma.SortOrder
  readyAt?: Prisma.SortOrderInput | Prisma.SortOrder
  expiresAt?: Prisma.SortOrderInput | Prisma.SortOrder
  lastCheckedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  errorCode?: Prisma.SortOrderInput | Prisma.SortOrder
  errorMessage?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  attachment?: Prisma.AttachmentOrderByWithRelationInput
  userKey?: Prisma.UserKeyOrderByWithRelationInput
}

export type AttachmentProviderWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  attachmentId_provider_keyFingerprint?: Prisma.AttachmentProviderAttachmentId_provider_keyFingerprintCompoundUniqueInput
  AND?: Prisma.AttachmentProviderWhereInput | Prisma.AttachmentProviderWhereInput[]
  OR?: Prisma.AttachmentProviderWhereInput[]
  NOT?: Prisma.AttachmentProviderWhereInput | Prisma.AttachmentProviderWhereInput[]
  attachmentId?: Prisma.StringFilter<"AttachmentProvider"> | string
  provider?: Prisma.EnumProviderFilter<"AttachmentProvider"> | $Enums.Provider
  userKeyId?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  keyFingerprint?: Prisma.StringFilter<"AttachmentProvider"> | string
  state?: Prisma.EnumProviderAssetStateFilter<"AttachmentProvider"> | $Enums.ProviderAssetState
  providerUri?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  providerRef?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  mime?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  size?: Prisma.BigIntNullableFilter<"AttachmentProvider"> | bigint | number | null
  readyAt?: Prisma.DateTimeNullableFilter<"AttachmentProvider"> | Date | string | null
  expiresAt?: Prisma.DateTimeNullableFilter<"AttachmentProvider"> | Date | string | null
  lastCheckedAt?: Prisma.DateTimeNullableFilter<"AttachmentProvider"> | Date | string | null
  errorCode?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  errorMessage?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  createdAt?: Prisma.DateTimeFilter<"AttachmentProvider"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"AttachmentProvider"> | Date | string
  attachment?: Prisma.XOR<Prisma.AttachmentScalarRelationFilter, Prisma.AttachmentWhereInput>
  userKey?: Prisma.XOR<Prisma.UserKeyNullableScalarRelationFilter, Prisma.UserKeyWhereInput> | null
}, "id" | "attachmentId_provider_keyFingerprint">

export type AttachmentProviderOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  attachmentId?: Prisma.SortOrder
  provider?: Prisma.SortOrder
  userKeyId?: Prisma.SortOrderInput | Prisma.SortOrder
  keyFingerprint?: Prisma.SortOrder
  state?: Prisma.SortOrder
  providerUri?: Prisma.SortOrderInput | Prisma.SortOrder
  providerRef?: Prisma.SortOrderInput | Prisma.SortOrder
  mime?: Prisma.SortOrderInput | Prisma.SortOrder
  size?: Prisma.SortOrderInput | Prisma.SortOrder
  readyAt?: Prisma.SortOrderInput | Prisma.SortOrder
  expiresAt?: Prisma.SortOrderInput | Prisma.SortOrder
  lastCheckedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  errorCode?: Prisma.SortOrderInput | Prisma.SortOrder
  errorMessage?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.AttachmentProviderCountOrderByAggregateInput
  _avg?: Prisma.AttachmentProviderAvgOrderByAggregateInput
  _max?: Prisma.AttachmentProviderMaxOrderByAggregateInput
  _min?: Prisma.AttachmentProviderMinOrderByAggregateInput
  _sum?: Prisma.AttachmentProviderSumOrderByAggregateInput
}

export type AttachmentProviderScalarWhereWithAggregatesInput = {
  AND?: Prisma.AttachmentProviderScalarWhereWithAggregatesInput | Prisma.AttachmentProviderScalarWhereWithAggregatesInput[]
  OR?: Prisma.AttachmentProviderScalarWhereWithAggregatesInput[]
  NOT?: Prisma.AttachmentProviderScalarWhereWithAggregatesInput | Prisma.AttachmentProviderScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"AttachmentProvider"> | string
  attachmentId?: Prisma.StringWithAggregatesFilter<"AttachmentProvider"> | string
  provider?: Prisma.EnumProviderWithAggregatesFilter<"AttachmentProvider"> | $Enums.Provider
  userKeyId?: Prisma.StringNullableWithAggregatesFilter<"AttachmentProvider"> | string | null
  keyFingerprint?: Prisma.StringWithAggregatesFilter<"AttachmentProvider"> | string
  state?: Prisma.EnumProviderAssetStateWithAggregatesFilter<"AttachmentProvider"> | $Enums.ProviderAssetState
  providerUri?: Prisma.StringNullableWithAggregatesFilter<"AttachmentProvider"> | string | null
  providerRef?: Prisma.StringNullableWithAggregatesFilter<"AttachmentProvider"> | string | null
  mime?: Prisma.StringNullableWithAggregatesFilter<"AttachmentProvider"> | string | null
  size?: Prisma.BigIntNullableWithAggregatesFilter<"AttachmentProvider"> | bigint | number | null
  readyAt?: Prisma.DateTimeNullableWithAggregatesFilter<"AttachmentProvider"> | Date | string | null
  expiresAt?: Prisma.DateTimeNullableWithAggregatesFilter<"AttachmentProvider"> | Date | string | null
  lastCheckedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"AttachmentProvider"> | Date | string | null
  errorCode?: Prisma.StringNullableWithAggregatesFilter<"AttachmentProvider"> | string | null
  errorMessage?: Prisma.StringNullableWithAggregatesFilter<"AttachmentProvider"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"AttachmentProvider"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"AttachmentProvider"> | Date | string
}

export type AttachmentProviderCreateInput = {
  id?: string
  provider: $Enums.Provider
  keyFingerprint: string
  state?: $Enums.ProviderAssetState
  providerUri?: string | null
  providerRef?: string | null
  mime?: string | null
  size?: bigint | number | null
  readyAt?: Date | string | null
  expiresAt?: Date | string | null
  lastCheckedAt?: Date | string | null
  errorCode?: string | null
  errorMessage?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  attachment: Prisma.AttachmentCreateNestedOneWithoutProviderLinksInput
  userKey?: Prisma.UserKeyCreateNestedOneWithoutAttachmentProvidersInput
}

export type AttachmentProviderUncheckedCreateInput = {
  id?: string
  attachmentId: string
  provider: $Enums.Provider
  userKeyId?: string | null
  keyFingerprint: string
  state?: $Enums.ProviderAssetState
  providerUri?: string | null
  providerRef?: string | null
  mime?: string | null
  size?: bigint | number | null
  readyAt?: Date | string | null
  expiresAt?: Date | string | null
  lastCheckedAt?: Date | string | null
  errorCode?: string | null
  errorMessage?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AttachmentProviderUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  attachment?: Prisma.AttachmentUpdateOneRequiredWithoutProviderLinksNestedInput
  userKey?: Prisma.UserKeyUpdateOneWithoutAttachmentProvidersNestedInput
}

export type AttachmentProviderUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  attachmentId?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  userKeyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AttachmentProviderCreateManyInput = {
  id?: string
  attachmentId: string
  provider: $Enums.Provider
  userKeyId?: string | null
  keyFingerprint: string
  state?: $Enums.ProviderAssetState
  providerUri?: string | null
  providerRef?: string | null
  mime?: string | null
  size?: bigint | number | null
  readyAt?: Date | string | null
  expiresAt?: Date | string | null
  lastCheckedAt?: Date | string | null
  errorCode?: string | null
  errorMessage?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AttachmentProviderUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AttachmentProviderUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  attachmentId?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  userKeyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AttachmentProviderListRelationFilter = {
  every?: Prisma.AttachmentProviderWhereInput
  some?: Prisma.AttachmentProviderWhereInput
  none?: Prisma.AttachmentProviderWhereInput
}

export type AttachmentProviderOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type AttachmentProviderAttachmentId_provider_keyFingerprintCompoundUniqueInput = {
  attachmentId: string
  provider: $Enums.Provider
  keyFingerprint: string
}

export type AttachmentProviderCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  attachmentId?: Prisma.SortOrder
  provider?: Prisma.SortOrder
  userKeyId?: Prisma.SortOrder
  keyFingerprint?: Prisma.SortOrder
  state?: Prisma.SortOrder
  providerUri?: Prisma.SortOrder
  providerRef?: Prisma.SortOrder
  mime?: Prisma.SortOrder
  size?: Prisma.SortOrder
  readyAt?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  lastCheckedAt?: Prisma.SortOrder
  errorCode?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type AttachmentProviderAvgOrderByAggregateInput = {
  size?: Prisma.SortOrder
}

export type AttachmentProviderMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  attachmentId?: Prisma.SortOrder
  provider?: Prisma.SortOrder
  userKeyId?: Prisma.SortOrder
  keyFingerprint?: Prisma.SortOrder
  state?: Prisma.SortOrder
  providerUri?: Prisma.SortOrder
  providerRef?: Prisma.SortOrder
  mime?: Prisma.SortOrder
  size?: Prisma.SortOrder
  readyAt?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  lastCheckedAt?: Prisma.SortOrder
  errorCode?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type AttachmentProviderMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  attachmentId?: Prisma.SortOrder
  provider?: Prisma.SortOrder
  userKeyId?: Prisma.SortOrder
  keyFingerprint?: Prisma.SortOrder
  state?: Prisma.SortOrder
  providerUri?: Prisma.SortOrder
  providerRef?: Prisma.SortOrder
  mime?: Prisma.SortOrder
  size?: Prisma.SortOrder
  readyAt?: Prisma.SortOrder
  expiresAt?: Prisma.SortOrder
  lastCheckedAt?: Prisma.SortOrder
  errorCode?: Prisma.SortOrder
  errorMessage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type AttachmentProviderSumOrderByAggregateInput = {
  size?: Prisma.SortOrder
}

export type AttachmentProviderCreateNestedManyWithoutUserKeyInput = {
  create?: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutUserKeyInput, Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput> | Prisma.AttachmentProviderCreateWithoutUserKeyInput[] | Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput[]
  connectOrCreate?: Prisma.AttachmentProviderCreateOrConnectWithoutUserKeyInput | Prisma.AttachmentProviderCreateOrConnectWithoutUserKeyInput[]
  createMany?: Prisma.AttachmentProviderCreateManyUserKeyInputEnvelope
  connect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
}

export type AttachmentProviderUncheckedCreateNestedManyWithoutUserKeyInput = {
  create?: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutUserKeyInput, Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput> | Prisma.AttachmentProviderCreateWithoutUserKeyInput[] | Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput[]
  connectOrCreate?: Prisma.AttachmentProviderCreateOrConnectWithoutUserKeyInput | Prisma.AttachmentProviderCreateOrConnectWithoutUserKeyInput[]
  createMany?: Prisma.AttachmentProviderCreateManyUserKeyInputEnvelope
  connect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
}

export type AttachmentProviderUpdateManyWithoutUserKeyNestedInput = {
  create?: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutUserKeyInput, Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput> | Prisma.AttachmentProviderCreateWithoutUserKeyInput[] | Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput[]
  connectOrCreate?: Prisma.AttachmentProviderCreateOrConnectWithoutUserKeyInput | Prisma.AttachmentProviderCreateOrConnectWithoutUserKeyInput[]
  upsert?: Prisma.AttachmentProviderUpsertWithWhereUniqueWithoutUserKeyInput | Prisma.AttachmentProviderUpsertWithWhereUniqueWithoutUserKeyInput[]
  createMany?: Prisma.AttachmentProviderCreateManyUserKeyInputEnvelope
  set?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  disconnect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  delete?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  connect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  update?: Prisma.AttachmentProviderUpdateWithWhereUniqueWithoutUserKeyInput | Prisma.AttachmentProviderUpdateWithWhereUniqueWithoutUserKeyInput[]
  updateMany?: Prisma.AttachmentProviderUpdateManyWithWhereWithoutUserKeyInput | Prisma.AttachmentProviderUpdateManyWithWhereWithoutUserKeyInput[]
  deleteMany?: Prisma.AttachmentProviderScalarWhereInput | Prisma.AttachmentProviderScalarWhereInput[]
}

export type AttachmentProviderUncheckedUpdateManyWithoutUserKeyNestedInput = {
  create?: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutUserKeyInput, Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput> | Prisma.AttachmentProviderCreateWithoutUserKeyInput[] | Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput[]
  connectOrCreate?: Prisma.AttachmentProviderCreateOrConnectWithoutUserKeyInput | Prisma.AttachmentProviderCreateOrConnectWithoutUserKeyInput[]
  upsert?: Prisma.AttachmentProviderUpsertWithWhereUniqueWithoutUserKeyInput | Prisma.AttachmentProviderUpsertWithWhereUniqueWithoutUserKeyInput[]
  createMany?: Prisma.AttachmentProviderCreateManyUserKeyInputEnvelope
  set?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  disconnect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  delete?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  connect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  update?: Prisma.AttachmentProviderUpdateWithWhereUniqueWithoutUserKeyInput | Prisma.AttachmentProviderUpdateWithWhereUniqueWithoutUserKeyInput[]
  updateMany?: Prisma.AttachmentProviderUpdateManyWithWhereWithoutUserKeyInput | Prisma.AttachmentProviderUpdateManyWithWhereWithoutUserKeyInput[]
  deleteMany?: Prisma.AttachmentProviderScalarWhereInput | Prisma.AttachmentProviderScalarWhereInput[]
}

export type AttachmentProviderCreateNestedManyWithoutAttachmentInput = {
  create?: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutAttachmentInput, Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput> | Prisma.AttachmentProviderCreateWithoutAttachmentInput[] | Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput[]
  connectOrCreate?: Prisma.AttachmentProviderCreateOrConnectWithoutAttachmentInput | Prisma.AttachmentProviderCreateOrConnectWithoutAttachmentInput[]
  createMany?: Prisma.AttachmentProviderCreateManyAttachmentInputEnvelope
  connect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
}

export type AttachmentProviderUncheckedCreateNestedManyWithoutAttachmentInput = {
  create?: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutAttachmentInput, Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput> | Prisma.AttachmentProviderCreateWithoutAttachmentInput[] | Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput[]
  connectOrCreate?: Prisma.AttachmentProviderCreateOrConnectWithoutAttachmentInput | Prisma.AttachmentProviderCreateOrConnectWithoutAttachmentInput[]
  createMany?: Prisma.AttachmentProviderCreateManyAttachmentInputEnvelope
  connect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
}

export type AttachmentProviderUpdateManyWithoutAttachmentNestedInput = {
  create?: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutAttachmentInput, Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput> | Prisma.AttachmentProviderCreateWithoutAttachmentInput[] | Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput[]
  connectOrCreate?: Prisma.AttachmentProviderCreateOrConnectWithoutAttachmentInput | Prisma.AttachmentProviderCreateOrConnectWithoutAttachmentInput[]
  upsert?: Prisma.AttachmentProviderUpsertWithWhereUniqueWithoutAttachmentInput | Prisma.AttachmentProviderUpsertWithWhereUniqueWithoutAttachmentInput[]
  createMany?: Prisma.AttachmentProviderCreateManyAttachmentInputEnvelope
  set?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  disconnect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  delete?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  connect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  update?: Prisma.AttachmentProviderUpdateWithWhereUniqueWithoutAttachmentInput | Prisma.AttachmentProviderUpdateWithWhereUniqueWithoutAttachmentInput[]
  updateMany?: Prisma.AttachmentProviderUpdateManyWithWhereWithoutAttachmentInput | Prisma.AttachmentProviderUpdateManyWithWhereWithoutAttachmentInput[]
  deleteMany?: Prisma.AttachmentProviderScalarWhereInput | Prisma.AttachmentProviderScalarWhereInput[]
}

export type AttachmentProviderUncheckedUpdateManyWithoutAttachmentNestedInput = {
  create?: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutAttachmentInput, Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput> | Prisma.AttachmentProviderCreateWithoutAttachmentInput[] | Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput[]
  connectOrCreate?: Prisma.AttachmentProviderCreateOrConnectWithoutAttachmentInput | Prisma.AttachmentProviderCreateOrConnectWithoutAttachmentInput[]
  upsert?: Prisma.AttachmentProviderUpsertWithWhereUniqueWithoutAttachmentInput | Prisma.AttachmentProviderUpsertWithWhereUniqueWithoutAttachmentInput[]
  createMany?: Prisma.AttachmentProviderCreateManyAttachmentInputEnvelope
  set?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  disconnect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  delete?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  connect?: Prisma.AttachmentProviderWhereUniqueInput | Prisma.AttachmentProviderWhereUniqueInput[]
  update?: Prisma.AttachmentProviderUpdateWithWhereUniqueWithoutAttachmentInput | Prisma.AttachmentProviderUpdateWithWhereUniqueWithoutAttachmentInput[]
  updateMany?: Prisma.AttachmentProviderUpdateManyWithWhereWithoutAttachmentInput | Prisma.AttachmentProviderUpdateManyWithWhereWithoutAttachmentInput[]
  deleteMany?: Prisma.AttachmentProviderScalarWhereInput | Prisma.AttachmentProviderScalarWhereInput[]
}

export type EnumProviderAssetStateFieldUpdateOperationsInput = {
  set?: $Enums.ProviderAssetState
}

export type AttachmentProviderCreateWithoutUserKeyInput = {
  id?: string
  provider: $Enums.Provider
  keyFingerprint: string
  state?: $Enums.ProviderAssetState
  providerUri?: string | null
  providerRef?: string | null
  mime?: string | null
  size?: bigint | number | null
  readyAt?: Date | string | null
  expiresAt?: Date | string | null
  lastCheckedAt?: Date | string | null
  errorCode?: string | null
  errorMessage?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  attachment: Prisma.AttachmentCreateNestedOneWithoutProviderLinksInput
}

export type AttachmentProviderUncheckedCreateWithoutUserKeyInput = {
  id?: string
  attachmentId: string
  provider: $Enums.Provider
  keyFingerprint: string
  state?: $Enums.ProviderAssetState
  providerUri?: string | null
  providerRef?: string | null
  mime?: string | null
  size?: bigint | number | null
  readyAt?: Date | string | null
  expiresAt?: Date | string | null
  lastCheckedAt?: Date | string | null
  errorCode?: string | null
  errorMessage?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AttachmentProviderCreateOrConnectWithoutUserKeyInput = {
  where: Prisma.AttachmentProviderWhereUniqueInput
  create: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutUserKeyInput, Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput>
}

export type AttachmentProviderCreateManyUserKeyInputEnvelope = {
  data: Prisma.AttachmentProviderCreateManyUserKeyInput | Prisma.AttachmentProviderCreateManyUserKeyInput[]
  skipDuplicates?: boolean
}

export type AttachmentProviderUpsertWithWhereUniqueWithoutUserKeyInput = {
  where: Prisma.AttachmentProviderWhereUniqueInput
  update: Prisma.XOR<Prisma.AttachmentProviderUpdateWithoutUserKeyInput, Prisma.AttachmentProviderUncheckedUpdateWithoutUserKeyInput>
  create: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutUserKeyInput, Prisma.AttachmentProviderUncheckedCreateWithoutUserKeyInput>
}

export type AttachmentProviderUpdateWithWhereUniqueWithoutUserKeyInput = {
  where: Prisma.AttachmentProviderWhereUniqueInput
  data: Prisma.XOR<Prisma.AttachmentProviderUpdateWithoutUserKeyInput, Prisma.AttachmentProviderUncheckedUpdateWithoutUserKeyInput>
}

export type AttachmentProviderUpdateManyWithWhereWithoutUserKeyInput = {
  where: Prisma.AttachmentProviderScalarWhereInput
  data: Prisma.XOR<Prisma.AttachmentProviderUpdateManyMutationInput, Prisma.AttachmentProviderUncheckedUpdateManyWithoutUserKeyInput>
}

export type AttachmentProviderScalarWhereInput = {
  AND?: Prisma.AttachmentProviderScalarWhereInput | Prisma.AttachmentProviderScalarWhereInput[]
  OR?: Prisma.AttachmentProviderScalarWhereInput[]
  NOT?: Prisma.AttachmentProviderScalarWhereInput | Prisma.AttachmentProviderScalarWhereInput[]
  id?: Prisma.StringFilter<"AttachmentProvider"> | string
  attachmentId?: Prisma.StringFilter<"AttachmentProvider"> | string
  provider?: Prisma.EnumProviderFilter<"AttachmentProvider"> | $Enums.Provider
  userKeyId?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  keyFingerprint?: Prisma.StringFilter<"AttachmentProvider"> | string
  state?: Prisma.EnumProviderAssetStateFilter<"AttachmentProvider"> | $Enums.ProviderAssetState
  providerUri?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  providerRef?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  mime?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  size?: Prisma.BigIntNullableFilter<"AttachmentProvider"> | bigint | number | null
  readyAt?: Prisma.DateTimeNullableFilter<"AttachmentProvider"> | Date | string | null
  expiresAt?: Prisma.DateTimeNullableFilter<"AttachmentProvider"> | Date | string | null
  lastCheckedAt?: Prisma.DateTimeNullableFilter<"AttachmentProvider"> | Date | string | null
  errorCode?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  errorMessage?: Prisma.StringNullableFilter<"AttachmentProvider"> | string | null
  createdAt?: Prisma.DateTimeFilter<"AttachmentProvider"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"AttachmentProvider"> | Date | string
}

export type AttachmentProviderCreateWithoutAttachmentInput = {
  id?: string
  provider: $Enums.Provider
  keyFingerprint: string
  state?: $Enums.ProviderAssetState
  providerUri?: string | null
  providerRef?: string | null
  mime?: string | null
  size?: bigint | number | null
  readyAt?: Date | string | null
  expiresAt?: Date | string | null
  lastCheckedAt?: Date | string | null
  errorCode?: string | null
  errorMessage?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  userKey?: Prisma.UserKeyCreateNestedOneWithoutAttachmentProvidersInput
}

export type AttachmentProviderUncheckedCreateWithoutAttachmentInput = {
  id?: string
  provider: $Enums.Provider
  userKeyId?: string | null
  keyFingerprint: string
  state?: $Enums.ProviderAssetState
  providerUri?: string | null
  providerRef?: string | null
  mime?: string | null
  size?: bigint | number | null
  readyAt?: Date | string | null
  expiresAt?: Date | string | null
  lastCheckedAt?: Date | string | null
  errorCode?: string | null
  errorMessage?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AttachmentProviderCreateOrConnectWithoutAttachmentInput = {
  where: Prisma.AttachmentProviderWhereUniqueInput
  create: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutAttachmentInput, Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput>
}

export type AttachmentProviderCreateManyAttachmentInputEnvelope = {
  data: Prisma.AttachmentProviderCreateManyAttachmentInput | Prisma.AttachmentProviderCreateManyAttachmentInput[]
  skipDuplicates?: boolean
}

export type AttachmentProviderUpsertWithWhereUniqueWithoutAttachmentInput = {
  where: Prisma.AttachmentProviderWhereUniqueInput
  update: Prisma.XOR<Prisma.AttachmentProviderUpdateWithoutAttachmentInput, Prisma.AttachmentProviderUncheckedUpdateWithoutAttachmentInput>
  create: Prisma.XOR<Prisma.AttachmentProviderCreateWithoutAttachmentInput, Prisma.AttachmentProviderUncheckedCreateWithoutAttachmentInput>
}

export type AttachmentProviderUpdateWithWhereUniqueWithoutAttachmentInput = {
  where: Prisma.AttachmentProviderWhereUniqueInput
  data: Prisma.XOR<Prisma.AttachmentProviderUpdateWithoutAttachmentInput, Prisma.AttachmentProviderUncheckedUpdateWithoutAttachmentInput>
}

export type AttachmentProviderUpdateManyWithWhereWithoutAttachmentInput = {
  where: Prisma.AttachmentProviderScalarWhereInput
  data: Prisma.XOR<Prisma.AttachmentProviderUpdateManyMutationInput, Prisma.AttachmentProviderUncheckedUpdateManyWithoutAttachmentInput>
}

export type AttachmentProviderCreateManyUserKeyInput = {
  id?: string
  attachmentId: string
  provider: $Enums.Provider
  keyFingerprint: string
  state?: $Enums.ProviderAssetState
  providerUri?: string | null
  providerRef?: string | null
  mime?: string | null
  size?: bigint | number | null
  readyAt?: Date | string | null
  expiresAt?: Date | string | null
  lastCheckedAt?: Date | string | null
  errorCode?: string | null
  errorMessage?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AttachmentProviderUpdateWithoutUserKeyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  attachment?: Prisma.AttachmentUpdateOneRequiredWithoutProviderLinksNestedInput
}

export type AttachmentProviderUncheckedUpdateWithoutUserKeyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  attachmentId?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AttachmentProviderUncheckedUpdateManyWithoutUserKeyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  attachmentId?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AttachmentProviderCreateManyAttachmentInput = {
  id?: string
  provider: $Enums.Provider
  userKeyId?: string | null
  keyFingerprint: string
  state?: $Enums.ProviderAssetState
  providerUri?: string | null
  providerRef?: string | null
  mime?: string | null
  size?: bigint | number | null
  readyAt?: Date | string | null
  expiresAt?: Date | string | null
  lastCheckedAt?: Date | string | null
  errorCode?: string | null
  errorMessage?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type AttachmentProviderUpdateWithoutAttachmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  userKey?: Prisma.UserKeyUpdateOneWithoutAttachmentProvidersNestedInput
}

export type AttachmentProviderUncheckedUpdateWithoutAttachmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  userKeyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type AttachmentProviderUncheckedUpdateManyWithoutAttachmentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  provider?: Prisma.EnumProviderFieldUpdateOperationsInput | $Enums.Provider
  userKeyId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  keyFingerprint?: Prisma.StringFieldUpdateOperationsInput | string
  state?: Prisma.EnumProviderAssetStateFieldUpdateOperationsInput | $Enums.ProviderAssetState
  providerUri?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  providerRef?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  mime?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  size?: Prisma.NullableBigIntFieldUpdateOperationsInput | bigint | number | null
  readyAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  expiresAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  lastCheckedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  errorCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  errorMessage?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type AttachmentProviderSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  attachmentId?: boolean
  provider?: boolean
  userKeyId?: boolean
  keyFingerprint?: boolean
  state?: boolean
  providerUri?: boolean
  providerRef?: boolean
  mime?: boolean
  size?: boolean
  readyAt?: boolean
  expiresAt?: boolean
  lastCheckedAt?: boolean
  errorCode?: boolean
  errorMessage?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
  userKey?: boolean | Prisma.AttachmentProvider$userKeyArgs<ExtArgs>
}, ExtArgs["result"]["attachmentProvider"]>

export type AttachmentProviderSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  attachmentId?: boolean
  provider?: boolean
  userKeyId?: boolean
  keyFingerprint?: boolean
  state?: boolean
  providerUri?: boolean
  providerRef?: boolean
  mime?: boolean
  size?: boolean
  readyAt?: boolean
  expiresAt?: boolean
  lastCheckedAt?: boolean
  errorCode?: boolean
  errorMessage?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
  userKey?: boolean | Prisma.AttachmentProvider$userKeyArgs<ExtArgs>
}, ExtArgs["result"]["attachmentProvider"]>

export type AttachmentProviderSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  attachmentId?: boolean
  provider?: boolean
  userKeyId?: boolean
  keyFingerprint?: boolean
  state?: boolean
  providerUri?: boolean
  providerRef?: boolean
  mime?: boolean
  size?: boolean
  readyAt?: boolean
  expiresAt?: boolean
  lastCheckedAt?: boolean
  errorCode?: boolean
  errorMessage?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
  userKey?: boolean | Prisma.AttachmentProvider$userKeyArgs<ExtArgs>
}, ExtArgs["result"]["attachmentProvider"]>

export type AttachmentProviderSelectScalar = {
  id?: boolean
  attachmentId?: boolean
  provider?: boolean
  userKeyId?: boolean
  keyFingerprint?: boolean
  state?: boolean
  providerUri?: boolean
  providerRef?: boolean
  mime?: boolean
  size?: boolean
  readyAt?: boolean
  expiresAt?: boolean
  lastCheckedAt?: boolean
  errorCode?: boolean
  errorMessage?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type AttachmentProviderOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "attachmentId" | "provider" | "userKeyId" | "keyFingerprint" | "state" | "providerUri" | "providerRef" | "mime" | "size" | "readyAt" | "expiresAt" | "lastCheckedAt" | "errorCode" | "errorMessage" | "createdAt" | "updatedAt", ExtArgs["result"]["attachmentProvider"]>
export type AttachmentProviderInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
  userKey?: boolean | Prisma.AttachmentProvider$userKeyArgs<ExtArgs>
}
export type AttachmentProviderIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
  userKey?: boolean | Prisma.AttachmentProvider$userKeyArgs<ExtArgs>
}
export type AttachmentProviderIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
  userKey?: boolean | Prisma.AttachmentProvider$userKeyArgs<ExtArgs>
}

export type $AttachmentProviderPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "AttachmentProvider"
  objects: {
    attachment: Prisma.$AttachmentPayload<ExtArgs>
    userKey: Prisma.$UserKeyPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    attachmentId: string
    provider: $Enums.Provider
    userKeyId: string | null
    keyFingerprint: string
    state: $Enums.ProviderAssetState
    providerUri: string | null
    providerRef: string | null
    mime: string | null
    size: bigint | null
    readyAt: Date | null
    expiresAt: Date | null
    lastCheckedAt: Date | null
    errorCode: string | null
    errorMessage: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["attachmentProvider"]>
  composites: {}
}

export type AttachmentProviderGetPayload<S extends boolean | null | undefined | AttachmentProviderDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload, S>

export type AttachmentProviderCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<AttachmentProviderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AttachmentProviderCountAggregateInputType | true
  }

export interface AttachmentProviderDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AttachmentProvider'], meta: { name: 'AttachmentProvider' } }
  /**
   * Find zero or one AttachmentProvider that matches the filter.
   * @param {AttachmentProviderFindUniqueArgs} args - Arguments to find a AttachmentProvider
   * @example
   * // Get one AttachmentProvider
   * const attachmentProvider = await prisma.attachmentProvider.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AttachmentProviderFindUniqueArgs>(args: Prisma.SelectSubset<T, AttachmentProviderFindUniqueArgs<ExtArgs>>): Prisma.Prisma__AttachmentProviderClient<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one AttachmentProvider that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AttachmentProviderFindUniqueOrThrowArgs} args - Arguments to find a AttachmentProvider
   * @example
   * // Get one AttachmentProvider
   * const attachmentProvider = await prisma.attachmentProvider.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AttachmentProviderFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, AttachmentProviderFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__AttachmentProviderClient<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first AttachmentProvider that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttachmentProviderFindFirstArgs} args - Arguments to find a AttachmentProvider
   * @example
   * // Get one AttachmentProvider
   * const attachmentProvider = await prisma.attachmentProvider.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AttachmentProviderFindFirstArgs>(args?: Prisma.SelectSubset<T, AttachmentProviderFindFirstArgs<ExtArgs>>): Prisma.Prisma__AttachmentProviderClient<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first AttachmentProvider that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttachmentProviderFindFirstOrThrowArgs} args - Arguments to find a AttachmentProvider
   * @example
   * // Get one AttachmentProvider
   * const attachmentProvider = await prisma.attachmentProvider.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AttachmentProviderFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, AttachmentProviderFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__AttachmentProviderClient<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more AttachmentProviders that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttachmentProviderFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AttachmentProviders
   * const attachmentProviders = await prisma.attachmentProvider.findMany()
   * 
   * // Get first 10 AttachmentProviders
   * const attachmentProviders = await prisma.attachmentProvider.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const attachmentProviderWithIdOnly = await prisma.attachmentProvider.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends AttachmentProviderFindManyArgs>(args?: Prisma.SelectSubset<T, AttachmentProviderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a AttachmentProvider.
   * @param {AttachmentProviderCreateArgs} args - Arguments to create a AttachmentProvider.
   * @example
   * // Create one AttachmentProvider
   * const AttachmentProvider = await prisma.attachmentProvider.create({
   *   data: {
   *     // ... data to create a AttachmentProvider
   *   }
   * })
   * 
   */
  create<T extends AttachmentProviderCreateArgs>(args: Prisma.SelectSubset<T, AttachmentProviderCreateArgs<ExtArgs>>): Prisma.Prisma__AttachmentProviderClient<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many AttachmentProviders.
   * @param {AttachmentProviderCreateManyArgs} args - Arguments to create many AttachmentProviders.
   * @example
   * // Create many AttachmentProviders
   * const attachmentProvider = await prisma.attachmentProvider.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends AttachmentProviderCreateManyArgs>(args?: Prisma.SelectSubset<T, AttachmentProviderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many AttachmentProviders and returns the data saved in the database.
   * @param {AttachmentProviderCreateManyAndReturnArgs} args - Arguments to create many AttachmentProviders.
   * @example
   * // Create many AttachmentProviders
   * const attachmentProvider = await prisma.attachmentProvider.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many AttachmentProviders and only return the `id`
   * const attachmentProviderWithIdOnly = await prisma.attachmentProvider.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends AttachmentProviderCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, AttachmentProviderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a AttachmentProvider.
   * @param {AttachmentProviderDeleteArgs} args - Arguments to delete one AttachmentProvider.
   * @example
   * // Delete one AttachmentProvider
   * const AttachmentProvider = await prisma.attachmentProvider.delete({
   *   where: {
   *     // ... filter to delete one AttachmentProvider
   *   }
   * })
   * 
   */
  delete<T extends AttachmentProviderDeleteArgs>(args: Prisma.SelectSubset<T, AttachmentProviderDeleteArgs<ExtArgs>>): Prisma.Prisma__AttachmentProviderClient<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one AttachmentProvider.
   * @param {AttachmentProviderUpdateArgs} args - Arguments to update one AttachmentProvider.
   * @example
   * // Update one AttachmentProvider
   * const attachmentProvider = await prisma.attachmentProvider.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends AttachmentProviderUpdateArgs>(args: Prisma.SelectSubset<T, AttachmentProviderUpdateArgs<ExtArgs>>): Prisma.Prisma__AttachmentProviderClient<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more AttachmentProviders.
   * @param {AttachmentProviderDeleteManyArgs} args - Arguments to filter AttachmentProviders to delete.
   * @example
   * // Delete a few AttachmentProviders
   * const { count } = await prisma.attachmentProvider.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends AttachmentProviderDeleteManyArgs>(args?: Prisma.SelectSubset<T, AttachmentProviderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more AttachmentProviders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttachmentProviderUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AttachmentProviders
   * const attachmentProvider = await prisma.attachmentProvider.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends AttachmentProviderUpdateManyArgs>(args: Prisma.SelectSubset<T, AttachmentProviderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more AttachmentProviders and returns the data updated in the database.
   * @param {AttachmentProviderUpdateManyAndReturnArgs} args - Arguments to update many AttachmentProviders.
   * @example
   * // Update many AttachmentProviders
   * const attachmentProvider = await prisma.attachmentProvider.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more AttachmentProviders and only return the `id`
   * const attachmentProviderWithIdOnly = await prisma.attachmentProvider.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends AttachmentProviderUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, AttachmentProviderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one AttachmentProvider.
   * @param {AttachmentProviderUpsertArgs} args - Arguments to update or create a AttachmentProvider.
   * @example
   * // Update or create a AttachmentProvider
   * const attachmentProvider = await prisma.attachmentProvider.upsert({
   *   create: {
   *     // ... data to create a AttachmentProvider
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AttachmentProvider we want to update
   *   }
   * })
   */
  upsert<T extends AttachmentProviderUpsertArgs>(args: Prisma.SelectSubset<T, AttachmentProviderUpsertArgs<ExtArgs>>): Prisma.Prisma__AttachmentProviderClient<runtime.Types.Result.GetResult<Prisma.$AttachmentProviderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of AttachmentProviders.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttachmentProviderCountArgs} args - Arguments to filter AttachmentProviders to count.
   * @example
   * // Count the number of AttachmentProviders
   * const count = await prisma.attachmentProvider.count({
   *   where: {
   *     // ... the filter for the AttachmentProviders we want to count
   *   }
   * })
  **/
  count<T extends AttachmentProviderCountArgs>(
    args?: Prisma.Subset<T, AttachmentProviderCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AttachmentProviderCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a AttachmentProvider.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttachmentProviderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AttachmentProviderAggregateArgs>(args: Prisma.Subset<T, AttachmentProviderAggregateArgs>): Prisma.PrismaPromise<GetAttachmentProviderAggregateType<T>>

  /**
   * Group by AttachmentProvider.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AttachmentProviderGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends AttachmentProviderGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AttachmentProviderGroupByArgs['orderBy'] }
      : { orderBy?: AttachmentProviderGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, AttachmentProviderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAttachmentProviderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the AttachmentProvider model
 */
readonly fields: AttachmentProviderFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AttachmentProvider.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AttachmentProviderClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  attachment<T extends Prisma.AttachmentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.AttachmentDefaultArgs<ExtArgs>>): Prisma.Prisma__AttachmentClient<runtime.Types.Result.GetResult<Prisma.$AttachmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  userKey<T extends Prisma.AttachmentProvider$userKeyArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.AttachmentProvider$userKeyArgs<ExtArgs>>): Prisma.Prisma__UserKeyClient<runtime.Types.Result.GetResult<Prisma.$UserKeyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the AttachmentProvider model
 */
export interface AttachmentProviderFieldRefs {
  readonly id: Prisma.FieldRef<"AttachmentProvider", 'String'>
  readonly attachmentId: Prisma.FieldRef<"AttachmentProvider", 'String'>
  readonly provider: Prisma.FieldRef<"AttachmentProvider", 'Provider'>
  readonly userKeyId: Prisma.FieldRef<"AttachmentProvider", 'String'>
  readonly keyFingerprint: Prisma.FieldRef<"AttachmentProvider", 'String'>
  readonly state: Prisma.FieldRef<"AttachmentProvider", 'ProviderAssetState'>
  readonly providerUri: Prisma.FieldRef<"AttachmentProvider", 'String'>
  readonly providerRef: Prisma.FieldRef<"AttachmentProvider", 'String'>
  readonly mime: Prisma.FieldRef<"AttachmentProvider", 'String'>
  readonly size: Prisma.FieldRef<"AttachmentProvider", 'BigInt'>
  readonly readyAt: Prisma.FieldRef<"AttachmentProvider", 'DateTime'>
  readonly expiresAt: Prisma.FieldRef<"AttachmentProvider", 'DateTime'>
  readonly lastCheckedAt: Prisma.FieldRef<"AttachmentProvider", 'DateTime'>
  readonly errorCode: Prisma.FieldRef<"AttachmentProvider", 'String'>
  readonly errorMessage: Prisma.FieldRef<"AttachmentProvider", 'String'>
  readonly createdAt: Prisma.FieldRef<"AttachmentProvider", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"AttachmentProvider", 'DateTime'>
}
    

// Custom InputTypes
/**
 * AttachmentProvider findUnique
 */
export type AttachmentProviderFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
  /**
   * Filter, which AttachmentProvider to fetch.
   */
  where: Prisma.AttachmentProviderWhereUniqueInput
}

/**
 * AttachmentProvider findUniqueOrThrow
 */
export type AttachmentProviderFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
  /**
   * Filter, which AttachmentProvider to fetch.
   */
  where: Prisma.AttachmentProviderWhereUniqueInput
}

/**
 * AttachmentProvider findFirst
 */
export type AttachmentProviderFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
  /**
   * Filter, which AttachmentProvider to fetch.
   */
  where?: Prisma.AttachmentProviderWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AttachmentProviders to fetch.
   */
  orderBy?: Prisma.AttachmentProviderOrderByWithRelationInput | Prisma.AttachmentProviderOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for AttachmentProviders.
   */
  cursor?: Prisma.AttachmentProviderWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AttachmentProviders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AttachmentProviders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of AttachmentProviders.
   */
  distinct?: Prisma.AttachmentProviderScalarFieldEnum | Prisma.AttachmentProviderScalarFieldEnum[]
}

/**
 * AttachmentProvider findFirstOrThrow
 */
export type AttachmentProviderFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
  /**
   * Filter, which AttachmentProvider to fetch.
   */
  where?: Prisma.AttachmentProviderWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AttachmentProviders to fetch.
   */
  orderBy?: Prisma.AttachmentProviderOrderByWithRelationInput | Prisma.AttachmentProviderOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for AttachmentProviders.
   */
  cursor?: Prisma.AttachmentProviderWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AttachmentProviders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AttachmentProviders.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of AttachmentProviders.
   */
  distinct?: Prisma.AttachmentProviderScalarFieldEnum | Prisma.AttachmentProviderScalarFieldEnum[]
}

/**
 * AttachmentProvider findMany
 */
export type AttachmentProviderFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
  /**
   * Filter, which AttachmentProviders to fetch.
   */
  where?: Prisma.AttachmentProviderWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AttachmentProviders to fetch.
   */
  orderBy?: Prisma.AttachmentProviderOrderByWithRelationInput | Prisma.AttachmentProviderOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing AttachmentProviders.
   */
  cursor?: Prisma.AttachmentProviderWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AttachmentProviders from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AttachmentProviders.
   */
  skip?: number
  distinct?: Prisma.AttachmentProviderScalarFieldEnum | Prisma.AttachmentProviderScalarFieldEnum[]
}

/**
 * AttachmentProvider create
 */
export type AttachmentProviderCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
  /**
   * The data needed to create a AttachmentProvider.
   */
  data: Prisma.XOR<Prisma.AttachmentProviderCreateInput, Prisma.AttachmentProviderUncheckedCreateInput>
}

/**
 * AttachmentProvider createMany
 */
export type AttachmentProviderCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many AttachmentProviders.
   */
  data: Prisma.AttachmentProviderCreateManyInput | Prisma.AttachmentProviderCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * AttachmentProvider createManyAndReturn
 */
export type AttachmentProviderCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * The data used to create many AttachmentProviders.
   */
  data: Prisma.AttachmentProviderCreateManyInput | Prisma.AttachmentProviderCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * AttachmentProvider update
 */
export type AttachmentProviderUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
  /**
   * The data needed to update a AttachmentProvider.
   */
  data: Prisma.XOR<Prisma.AttachmentProviderUpdateInput, Prisma.AttachmentProviderUncheckedUpdateInput>
  /**
   * Choose, which AttachmentProvider to update.
   */
  where: Prisma.AttachmentProviderWhereUniqueInput
}

/**
 * AttachmentProvider updateMany
 */
export type AttachmentProviderUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update AttachmentProviders.
   */
  data: Prisma.XOR<Prisma.AttachmentProviderUpdateManyMutationInput, Prisma.AttachmentProviderUncheckedUpdateManyInput>
  /**
   * Filter which AttachmentProviders to update
   */
  where?: Prisma.AttachmentProviderWhereInput
  /**
   * Limit how many AttachmentProviders to update.
   */
  limit?: number
}

/**
 * AttachmentProvider updateManyAndReturn
 */
export type AttachmentProviderUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * The data used to update AttachmentProviders.
   */
  data: Prisma.XOR<Prisma.AttachmentProviderUpdateManyMutationInput, Prisma.AttachmentProviderUncheckedUpdateManyInput>
  /**
   * Filter which AttachmentProviders to update
   */
  where?: Prisma.AttachmentProviderWhereInput
  /**
   * Limit how many AttachmentProviders to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * AttachmentProvider upsert
 */
export type AttachmentProviderUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
  /**
   * The filter to search for the AttachmentProvider to update in case it exists.
   */
  where: Prisma.AttachmentProviderWhereUniqueInput
  /**
   * In case the AttachmentProvider found by the `where` argument doesn't exist, create a new AttachmentProvider with this data.
   */
  create: Prisma.XOR<Prisma.AttachmentProviderCreateInput, Prisma.AttachmentProviderUncheckedCreateInput>
  /**
   * In case the AttachmentProvider was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AttachmentProviderUpdateInput, Prisma.AttachmentProviderUncheckedUpdateInput>
}

/**
 * AttachmentProvider delete
 */
export type AttachmentProviderDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
  /**
   * Filter which AttachmentProvider to delete.
   */
  where: Prisma.AttachmentProviderWhereUniqueInput
}

/**
 * AttachmentProvider deleteMany
 */
export type AttachmentProviderDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which AttachmentProviders to delete
   */
  where?: Prisma.AttachmentProviderWhereInput
  /**
   * Limit how many AttachmentProviders to delete.
   */
  limit?: number
}

/**
 * AttachmentProvider.userKey
 */
export type AttachmentProvider$userKeyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserKey
   */
  select?: Prisma.UserKeySelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserKey
   */
  omit?: Prisma.UserKeyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserKeyInclude<ExtArgs> | null
  where?: Prisma.UserKeyWhereInput
}

/**
 * AttachmentProvider without action
 */
export type AttachmentProviderDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AttachmentProvider
   */
  select?: Prisma.AttachmentProviderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AttachmentProvider
   */
  omit?: Prisma.AttachmentProviderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AttachmentProviderInclude<ExtArgs> | null
}
