
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `VideoMetadata` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model VideoMetadata
 * 
 */
export type VideoMetadataModel = runtime.Types.Result.DefaultSelection<Prisma.$VideoMetadataPayload>

export type AggregateVideoMetadata = {
  _count: VideoMetadataCountAggregateOutputType | null
  _avg: VideoMetadataAvgAggregateOutputType | null
  _sum: VideoMetadataSumAggregateOutputType | null
  _min: VideoMetadataMinAggregateOutputType | null
  _max: VideoMetadataMaxAggregateOutputType | null
}

export type VideoMetadataAvgAggregateOutputType = {
  width: number | null
  height: number | null
  aspectRatio: runtime.Decimal | null
  duration: number | null
  frameRate: runtime.Decimal | null
  bitrate: number | null
  orientation: number | null
  rotation: number | null
  thumbnailCount: number | null
  keyframeTimes: number | null
}

export type VideoMetadataSumAggregateOutputType = {
  width: number | null
  height: number | null
  aspectRatio: runtime.Decimal | null
  duration: number | null
  frameRate: runtime.Decimal | null
  bitrate: number | null
  orientation: number | null
  rotation: number | null
  thumbnailCount: number | null
  keyframeTimes: number[]
}

export type VideoMetadataMinAggregateOutputType = {
  attachmentId: string | null
  format: string | null
  width: number | null
  height: number | null
  aspectRatio: runtime.Decimal | null
  duration: number | null
  frameRate: runtime.Decimal | null
  bitrate: number | null
  codec: string | null
  hasAudio: boolean | null
  resolution: string | null
  orientation: number | null
  rotation: number | null
  thumbnailCount: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type VideoMetadataMaxAggregateOutputType = {
  attachmentId: string | null
  format: string | null
  width: number | null
  height: number | null
  aspectRatio: runtime.Decimal | null
  duration: number | null
  frameRate: runtime.Decimal | null
  bitrate: number | null
  codec: string | null
  hasAudio: boolean | null
  resolution: string | null
  orientation: number | null
  rotation: number | null
  thumbnailCount: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type VideoMetadataCountAggregateOutputType = {
  attachmentId: number
  format: number
  width: number
  height: number
  aspectRatio: number
  duration: number
  frameRate: number
  bitrate: number
  codec: number
  hasAudio: number
  resolution: number
  orientation: number
  rotation: number
  thumbnailCount: number
  keyframeTimes: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type VideoMetadataAvgAggregateInputType = {
  width?: true
  height?: true
  aspectRatio?: true
  duration?: true
  frameRate?: true
  bitrate?: true
  orientation?: true
  rotation?: true
  thumbnailCount?: true
  keyframeTimes?: true
}

export type VideoMetadataSumAggregateInputType = {
  width?: true
  height?: true
  aspectRatio?: true
  duration?: true
  frameRate?: true
  bitrate?: true
  orientation?: true
  rotation?: true
  thumbnailCount?: true
  keyframeTimes?: true
}

export type VideoMetadataMinAggregateInputType = {
  attachmentId?: true
  format?: true
  width?: true
  height?: true
  aspectRatio?: true
  duration?: true
  frameRate?: true
  bitrate?: true
  codec?: true
  hasAudio?: true
  resolution?: true
  orientation?: true
  rotation?: true
  thumbnailCount?: true
  createdAt?: true
  updatedAt?: true
}

export type VideoMetadataMaxAggregateInputType = {
  attachmentId?: true
  format?: true
  width?: true
  height?: true
  aspectRatio?: true
  duration?: true
  frameRate?: true
  bitrate?: true
  codec?: true
  hasAudio?: true
  resolution?: true
  orientation?: true
  rotation?: true
  thumbnailCount?: true
  createdAt?: true
  updatedAt?: true
}

export type VideoMetadataCountAggregateInputType = {
  attachmentId?: true
  format?: true
  width?: true
  height?: true
  aspectRatio?: true
  duration?: true
  frameRate?: true
  bitrate?: true
  codec?: true
  hasAudio?: true
  resolution?: true
  orientation?: true
  rotation?: true
  thumbnailCount?: true
  keyframeTimes?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type VideoMetadataAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which VideoMetadata to aggregate.
   */
  where?: Prisma.VideoMetadataWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VideoMetadata to fetch.
   */
  orderBy?: Prisma.VideoMetadataOrderByWithRelationInput | Prisma.VideoMetadataOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.VideoMetadataWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VideoMetadata from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VideoMetadata.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned VideoMetadata
  **/
  _count?: true | VideoMetadataCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: VideoMetadataAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: VideoMetadataSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: VideoMetadataMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: VideoMetadataMaxAggregateInputType
}

export type GetVideoMetadataAggregateType<T extends VideoMetadataAggregateArgs> = {
      [P in keyof T & keyof AggregateVideoMetadata]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateVideoMetadata[P]>
    : Prisma.GetScalarType<T[P], AggregateVideoMetadata[P]>
}




export type VideoMetadataGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.VideoMetadataWhereInput
  orderBy?: Prisma.VideoMetadataOrderByWithAggregationInput | Prisma.VideoMetadataOrderByWithAggregationInput[]
  by: Prisma.VideoMetadataScalarFieldEnum[] | Prisma.VideoMetadataScalarFieldEnum
  having?: Prisma.VideoMetadataScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: VideoMetadataCountAggregateInputType | true
  _avg?: VideoMetadataAvgAggregateInputType
  _sum?: VideoMetadataSumAggregateInputType
  _min?: VideoMetadataMinAggregateInputType
  _max?: VideoMetadataMaxAggregateInputType
}

export type VideoMetadataGroupByOutputType = {
  attachmentId: string
  format: string
  width: number
  height: number
  aspectRatio: runtime.Decimal
  duration: number
  frameRate: runtime.Decimal | null
  bitrate: number | null
  codec: string | null
  hasAudio: boolean
  resolution: string | null
  orientation: number | null
  rotation: number | null
  thumbnailCount: number | null
  keyframeTimes: number[]
  createdAt: Date
  updatedAt: Date
  _count: VideoMetadataCountAggregateOutputType | null
  _avg: VideoMetadataAvgAggregateOutputType | null
  _sum: VideoMetadataSumAggregateOutputType | null
  _min: VideoMetadataMinAggregateOutputType | null
  _max: VideoMetadataMaxAggregateOutputType | null
}

type GetVideoMetadataGroupByPayload<T extends VideoMetadataGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<VideoMetadataGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof VideoMetadataGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], VideoMetadataGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], VideoMetadataGroupByOutputType[P]>
      }
    >
  >



export type VideoMetadataWhereInput = {
  AND?: Prisma.VideoMetadataWhereInput | Prisma.VideoMetadataWhereInput[]
  OR?: Prisma.VideoMetadataWhereInput[]
  NOT?: Prisma.VideoMetadataWhereInput | Prisma.VideoMetadataWhereInput[]
  attachmentId?: Prisma.StringFilter<"VideoMetadata"> | string
  format?: Prisma.StringFilter<"VideoMetadata"> | string
  width?: Prisma.IntFilter<"VideoMetadata"> | number
  height?: Prisma.IntFilter<"VideoMetadata"> | number
  aspectRatio?: Prisma.DecimalFilter<"VideoMetadata"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  duration?: Prisma.IntFilter<"VideoMetadata"> | number
  frameRate?: Prisma.DecimalNullableFilter<"VideoMetadata"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: Prisma.IntNullableFilter<"VideoMetadata"> | number | null
  codec?: Prisma.StringNullableFilter<"VideoMetadata"> | string | null
  hasAudio?: Prisma.BoolFilter<"VideoMetadata"> | boolean
  resolution?: Prisma.StringNullableFilter<"VideoMetadata"> | string | null
  orientation?: Prisma.IntNullableFilter<"VideoMetadata"> | number | null
  rotation?: Prisma.IntNullableFilter<"VideoMetadata"> | number | null
  thumbnailCount?: Prisma.IntNullableFilter<"VideoMetadata"> | number | null
  keyframeTimes?: Prisma.IntNullableListFilter<"VideoMetadata">
  createdAt?: Prisma.DateTimeFilter<"VideoMetadata"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"VideoMetadata"> | Date | string
  attachment?: Prisma.XOR<Prisma.AttachmentScalarRelationFilter, Prisma.AttachmentWhereInput>
}

export type VideoMetadataOrderByWithRelationInput = {
  attachmentId?: Prisma.SortOrder
  format?: Prisma.SortOrder
  width?: Prisma.SortOrder
  height?: Prisma.SortOrder
  aspectRatio?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  frameRate?: Prisma.SortOrderInput | Prisma.SortOrder
  bitrate?: Prisma.SortOrderInput | Prisma.SortOrder
  codec?: Prisma.SortOrderInput | Prisma.SortOrder
  hasAudio?: Prisma.SortOrder
  resolution?: Prisma.SortOrderInput | Prisma.SortOrder
  orientation?: Prisma.SortOrderInput | Prisma.SortOrder
  rotation?: Prisma.SortOrderInput | Prisma.SortOrder
  thumbnailCount?: Prisma.SortOrderInput | Prisma.SortOrder
  keyframeTimes?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  attachment?: Prisma.AttachmentOrderByWithRelationInput
}

export type VideoMetadataWhereUniqueInput = Prisma.AtLeast<{
  attachmentId?: string
  AND?: Prisma.VideoMetadataWhereInput | Prisma.VideoMetadataWhereInput[]
  OR?: Prisma.VideoMetadataWhereInput[]
  NOT?: Prisma.VideoMetadataWhereInput | Prisma.VideoMetadataWhereInput[]
  format?: Prisma.StringFilter<"VideoMetadata"> | string
  width?: Prisma.IntFilter<"VideoMetadata"> | number
  height?: Prisma.IntFilter<"VideoMetadata"> | number
  aspectRatio?: Prisma.DecimalFilter<"VideoMetadata"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  duration?: Prisma.IntFilter<"VideoMetadata"> | number
  frameRate?: Prisma.DecimalNullableFilter<"VideoMetadata"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: Prisma.IntNullableFilter<"VideoMetadata"> | number | null
  codec?: Prisma.StringNullableFilter<"VideoMetadata"> | string | null
  hasAudio?: Prisma.BoolFilter<"VideoMetadata"> | boolean
  resolution?: Prisma.StringNullableFilter<"VideoMetadata"> | string | null
  orientation?: Prisma.IntNullableFilter<"VideoMetadata"> | number | null
  rotation?: Prisma.IntNullableFilter<"VideoMetadata"> | number | null
  thumbnailCount?: Prisma.IntNullableFilter<"VideoMetadata"> | number | null
  keyframeTimes?: Prisma.IntNullableListFilter<"VideoMetadata">
  createdAt?: Prisma.DateTimeFilter<"VideoMetadata"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"VideoMetadata"> | Date | string
  attachment?: Prisma.XOR<Prisma.AttachmentScalarRelationFilter, Prisma.AttachmentWhereInput>
}, "attachmentId">

export type VideoMetadataOrderByWithAggregationInput = {
  attachmentId?: Prisma.SortOrder
  format?: Prisma.SortOrder
  width?: Prisma.SortOrder
  height?: Prisma.SortOrder
  aspectRatio?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  frameRate?: Prisma.SortOrderInput | Prisma.SortOrder
  bitrate?: Prisma.SortOrderInput | Prisma.SortOrder
  codec?: Prisma.SortOrderInput | Prisma.SortOrder
  hasAudio?: Prisma.SortOrder
  resolution?: Prisma.SortOrderInput | Prisma.SortOrder
  orientation?: Prisma.SortOrderInput | Prisma.SortOrder
  rotation?: Prisma.SortOrderInput | Prisma.SortOrder
  thumbnailCount?: Prisma.SortOrderInput | Prisma.SortOrder
  keyframeTimes?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.VideoMetadataCountOrderByAggregateInput
  _avg?: Prisma.VideoMetadataAvgOrderByAggregateInput
  _max?: Prisma.VideoMetadataMaxOrderByAggregateInput
  _min?: Prisma.VideoMetadataMinOrderByAggregateInput
  _sum?: Prisma.VideoMetadataSumOrderByAggregateInput
}

export type VideoMetadataScalarWhereWithAggregatesInput = {
  AND?: Prisma.VideoMetadataScalarWhereWithAggregatesInput | Prisma.VideoMetadataScalarWhereWithAggregatesInput[]
  OR?: Prisma.VideoMetadataScalarWhereWithAggregatesInput[]
  NOT?: Prisma.VideoMetadataScalarWhereWithAggregatesInput | Prisma.VideoMetadataScalarWhereWithAggregatesInput[]
  attachmentId?: Prisma.StringWithAggregatesFilter<"VideoMetadata"> | string
  format?: Prisma.StringWithAggregatesFilter<"VideoMetadata"> | string
  width?: Prisma.IntWithAggregatesFilter<"VideoMetadata"> | number
  height?: Prisma.IntWithAggregatesFilter<"VideoMetadata"> | number
  aspectRatio?: Prisma.DecimalWithAggregatesFilter<"VideoMetadata"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  duration?: Prisma.IntWithAggregatesFilter<"VideoMetadata"> | number
  frameRate?: Prisma.DecimalNullableWithAggregatesFilter<"VideoMetadata"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: Prisma.IntNullableWithAggregatesFilter<"VideoMetadata"> | number | null
  codec?: Prisma.StringNullableWithAggregatesFilter<"VideoMetadata"> | string | null
  hasAudio?: Prisma.BoolWithAggregatesFilter<"VideoMetadata"> | boolean
  resolution?: Prisma.StringNullableWithAggregatesFilter<"VideoMetadata"> | string | null
  orientation?: Prisma.IntNullableWithAggregatesFilter<"VideoMetadata"> | number | null
  rotation?: Prisma.IntNullableWithAggregatesFilter<"VideoMetadata"> | number | null
  thumbnailCount?: Prisma.IntNullableWithAggregatesFilter<"VideoMetadata"> | number | null
  keyframeTimes?: Prisma.IntNullableListFilter<"VideoMetadata">
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"VideoMetadata"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"VideoMetadata"> | Date | string
}

export type VideoMetadataCreateInput = {
  format: string
  width: number
  height: number
  aspectRatio: runtime.Decimal | runtime.DecimalJsLike | number | string
  duration: number
  frameRate?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: number | null
  codec?: string | null
  hasAudio?: boolean
  resolution?: string | null
  orientation?: number | null
  rotation?: number | null
  thumbnailCount?: number | null
  keyframeTimes?: Prisma.VideoMetadataCreatekeyframeTimesInput | number[]
  createdAt?: Date | string
  updatedAt?: Date | string
  attachment: Prisma.AttachmentCreateNestedOneWithoutVideoInput
}

export type VideoMetadataUncheckedCreateInput = {
  attachmentId: string
  format: string
  width: number
  height: number
  aspectRatio: runtime.Decimal | runtime.DecimalJsLike | number | string
  duration: number
  frameRate?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: number | null
  codec?: string | null
  hasAudio?: boolean
  resolution?: string | null
  orientation?: number | null
  rotation?: number | null
  thumbnailCount?: number | null
  keyframeTimes?: Prisma.VideoMetadataCreatekeyframeTimesInput | number[]
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type VideoMetadataUpdateInput = {
  format?: Prisma.StringFieldUpdateOperationsInput | string
  width?: Prisma.IntFieldUpdateOperationsInput | number
  height?: Prisma.IntFieldUpdateOperationsInput | number
  aspectRatio?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  frameRate?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  codec?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasAudio?: Prisma.BoolFieldUpdateOperationsInput | boolean
  resolution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orientation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  rotation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  thumbnailCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  keyframeTimes?: Prisma.VideoMetadataUpdatekeyframeTimesInput | number[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  attachment?: Prisma.AttachmentUpdateOneRequiredWithoutVideoNestedInput
}

export type VideoMetadataUncheckedUpdateInput = {
  attachmentId?: Prisma.StringFieldUpdateOperationsInput | string
  format?: Prisma.StringFieldUpdateOperationsInput | string
  width?: Prisma.IntFieldUpdateOperationsInput | number
  height?: Prisma.IntFieldUpdateOperationsInput | number
  aspectRatio?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  frameRate?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  codec?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasAudio?: Prisma.BoolFieldUpdateOperationsInput | boolean
  resolution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orientation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  rotation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  thumbnailCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  keyframeTimes?: Prisma.VideoMetadataUpdatekeyframeTimesInput | number[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type VideoMetadataCreateManyInput = {
  attachmentId: string
  format: string
  width: number
  height: number
  aspectRatio: runtime.Decimal | runtime.DecimalJsLike | number | string
  duration: number
  frameRate?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: number | null
  codec?: string | null
  hasAudio?: boolean
  resolution?: string | null
  orientation?: number | null
  rotation?: number | null
  thumbnailCount?: number | null
  keyframeTimes?: Prisma.VideoMetadataCreatekeyframeTimesInput | number[]
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type VideoMetadataUpdateManyMutationInput = {
  format?: Prisma.StringFieldUpdateOperationsInput | string
  width?: Prisma.IntFieldUpdateOperationsInput | number
  height?: Prisma.IntFieldUpdateOperationsInput | number
  aspectRatio?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  frameRate?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  codec?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasAudio?: Prisma.BoolFieldUpdateOperationsInput | boolean
  resolution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orientation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  rotation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  thumbnailCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  keyframeTimes?: Prisma.VideoMetadataUpdatekeyframeTimesInput | number[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type VideoMetadataUncheckedUpdateManyInput = {
  attachmentId?: Prisma.StringFieldUpdateOperationsInput | string
  format?: Prisma.StringFieldUpdateOperationsInput | string
  width?: Prisma.IntFieldUpdateOperationsInput | number
  height?: Prisma.IntFieldUpdateOperationsInput | number
  aspectRatio?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  frameRate?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  codec?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasAudio?: Prisma.BoolFieldUpdateOperationsInput | boolean
  resolution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orientation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  rotation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  thumbnailCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  keyframeTimes?: Prisma.VideoMetadataUpdatekeyframeTimesInput | number[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type VideoMetadataNullableScalarRelationFilter = {
  is?: Prisma.VideoMetadataWhereInput | null
  isNot?: Prisma.VideoMetadataWhereInput | null
}

export type IntNullableListFilter<$PrismaModel = never> = {
  equals?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel> | null
  has?: number | Prisma.IntFieldRefInput<$PrismaModel> | null
  hasEvery?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel>
  hasSome?: number[] | Prisma.ListIntFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type VideoMetadataCountOrderByAggregateInput = {
  attachmentId?: Prisma.SortOrder
  format?: Prisma.SortOrder
  width?: Prisma.SortOrder
  height?: Prisma.SortOrder
  aspectRatio?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  frameRate?: Prisma.SortOrder
  bitrate?: Prisma.SortOrder
  codec?: Prisma.SortOrder
  hasAudio?: Prisma.SortOrder
  resolution?: Prisma.SortOrder
  orientation?: Prisma.SortOrder
  rotation?: Prisma.SortOrder
  thumbnailCount?: Prisma.SortOrder
  keyframeTimes?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type VideoMetadataAvgOrderByAggregateInput = {
  width?: Prisma.SortOrder
  height?: Prisma.SortOrder
  aspectRatio?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  frameRate?: Prisma.SortOrder
  bitrate?: Prisma.SortOrder
  orientation?: Prisma.SortOrder
  rotation?: Prisma.SortOrder
  thumbnailCount?: Prisma.SortOrder
  keyframeTimes?: Prisma.SortOrder
}

export type VideoMetadataMaxOrderByAggregateInput = {
  attachmentId?: Prisma.SortOrder
  format?: Prisma.SortOrder
  width?: Prisma.SortOrder
  height?: Prisma.SortOrder
  aspectRatio?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  frameRate?: Prisma.SortOrder
  bitrate?: Prisma.SortOrder
  codec?: Prisma.SortOrder
  hasAudio?: Prisma.SortOrder
  resolution?: Prisma.SortOrder
  orientation?: Prisma.SortOrder
  rotation?: Prisma.SortOrder
  thumbnailCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type VideoMetadataMinOrderByAggregateInput = {
  attachmentId?: Prisma.SortOrder
  format?: Prisma.SortOrder
  width?: Prisma.SortOrder
  height?: Prisma.SortOrder
  aspectRatio?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  frameRate?: Prisma.SortOrder
  bitrate?: Prisma.SortOrder
  codec?: Prisma.SortOrder
  hasAudio?: Prisma.SortOrder
  resolution?: Prisma.SortOrder
  orientation?: Prisma.SortOrder
  rotation?: Prisma.SortOrder
  thumbnailCount?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type VideoMetadataSumOrderByAggregateInput = {
  width?: Prisma.SortOrder
  height?: Prisma.SortOrder
  aspectRatio?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  frameRate?: Prisma.SortOrder
  bitrate?: Prisma.SortOrder
  orientation?: Prisma.SortOrder
  rotation?: Prisma.SortOrder
  thumbnailCount?: Prisma.SortOrder
  keyframeTimes?: Prisma.SortOrder
}

export type VideoMetadataCreateNestedOneWithoutAttachmentInput = {
  create?: Prisma.XOR<Prisma.VideoMetadataCreateWithoutAttachmentInput, Prisma.VideoMetadataUncheckedCreateWithoutAttachmentInput>
  connectOrCreate?: Prisma.VideoMetadataCreateOrConnectWithoutAttachmentInput
  connect?: Prisma.VideoMetadataWhereUniqueInput
}

export type VideoMetadataUncheckedCreateNestedOneWithoutAttachmentInput = {
  create?: Prisma.XOR<Prisma.VideoMetadataCreateWithoutAttachmentInput, Prisma.VideoMetadataUncheckedCreateWithoutAttachmentInput>
  connectOrCreate?: Prisma.VideoMetadataCreateOrConnectWithoutAttachmentInput
  connect?: Prisma.VideoMetadataWhereUniqueInput
}

export type VideoMetadataUpdateOneWithoutAttachmentNestedInput = {
  create?: Prisma.XOR<Prisma.VideoMetadataCreateWithoutAttachmentInput, Prisma.VideoMetadataUncheckedCreateWithoutAttachmentInput>
  connectOrCreate?: Prisma.VideoMetadataCreateOrConnectWithoutAttachmentInput
  upsert?: Prisma.VideoMetadataUpsertWithoutAttachmentInput
  disconnect?: Prisma.VideoMetadataWhereInput | boolean
  delete?: Prisma.VideoMetadataWhereInput | boolean
  connect?: Prisma.VideoMetadataWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.VideoMetadataUpdateToOneWithWhereWithoutAttachmentInput, Prisma.VideoMetadataUpdateWithoutAttachmentInput>, Prisma.VideoMetadataUncheckedUpdateWithoutAttachmentInput>
}

export type VideoMetadataUncheckedUpdateOneWithoutAttachmentNestedInput = {
  create?: Prisma.XOR<Prisma.VideoMetadataCreateWithoutAttachmentInput, Prisma.VideoMetadataUncheckedCreateWithoutAttachmentInput>
  connectOrCreate?: Prisma.VideoMetadataCreateOrConnectWithoutAttachmentInput
  upsert?: Prisma.VideoMetadataUpsertWithoutAttachmentInput
  disconnect?: Prisma.VideoMetadataWhereInput | boolean
  delete?: Prisma.VideoMetadataWhereInput | boolean
  connect?: Prisma.VideoMetadataWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.VideoMetadataUpdateToOneWithWhereWithoutAttachmentInput, Prisma.VideoMetadataUpdateWithoutAttachmentInput>, Prisma.VideoMetadataUncheckedUpdateWithoutAttachmentInput>
}

export type VideoMetadataCreatekeyframeTimesInput = {
  set: number[]
}

export type VideoMetadataUpdatekeyframeTimesInput = {
  set?: number[]
  push?: number | number[]
}

export type VideoMetadataCreateWithoutAttachmentInput = {
  format: string
  width: number
  height: number
  aspectRatio: runtime.Decimal | runtime.DecimalJsLike | number | string
  duration: number
  frameRate?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: number | null
  codec?: string | null
  hasAudio?: boolean
  resolution?: string | null
  orientation?: number | null
  rotation?: number | null
  thumbnailCount?: number | null
  keyframeTimes?: Prisma.VideoMetadataCreatekeyframeTimesInput | number[]
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type VideoMetadataUncheckedCreateWithoutAttachmentInput = {
  format: string
  width: number
  height: number
  aspectRatio: runtime.Decimal | runtime.DecimalJsLike | number | string
  duration: number
  frameRate?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: number | null
  codec?: string | null
  hasAudio?: boolean
  resolution?: string | null
  orientation?: number | null
  rotation?: number | null
  thumbnailCount?: number | null
  keyframeTimes?: Prisma.VideoMetadataCreatekeyframeTimesInput | number[]
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type VideoMetadataCreateOrConnectWithoutAttachmentInput = {
  where: Prisma.VideoMetadataWhereUniqueInput
  create: Prisma.XOR<Prisma.VideoMetadataCreateWithoutAttachmentInput, Prisma.VideoMetadataUncheckedCreateWithoutAttachmentInput>
}

export type VideoMetadataUpsertWithoutAttachmentInput = {
  update: Prisma.XOR<Prisma.VideoMetadataUpdateWithoutAttachmentInput, Prisma.VideoMetadataUncheckedUpdateWithoutAttachmentInput>
  create: Prisma.XOR<Prisma.VideoMetadataCreateWithoutAttachmentInput, Prisma.VideoMetadataUncheckedCreateWithoutAttachmentInput>
  where?: Prisma.VideoMetadataWhereInput
}

export type VideoMetadataUpdateToOneWithWhereWithoutAttachmentInput = {
  where?: Prisma.VideoMetadataWhereInput
  data: Prisma.XOR<Prisma.VideoMetadataUpdateWithoutAttachmentInput, Prisma.VideoMetadataUncheckedUpdateWithoutAttachmentInput>
}

export type VideoMetadataUpdateWithoutAttachmentInput = {
  format?: Prisma.StringFieldUpdateOperationsInput | string
  width?: Prisma.IntFieldUpdateOperationsInput | number
  height?: Prisma.IntFieldUpdateOperationsInput | number
  aspectRatio?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  frameRate?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  codec?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasAudio?: Prisma.BoolFieldUpdateOperationsInput | boolean
  resolution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orientation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  rotation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  thumbnailCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  keyframeTimes?: Prisma.VideoMetadataUpdatekeyframeTimesInput | number[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type VideoMetadataUncheckedUpdateWithoutAttachmentInput = {
  format?: Prisma.StringFieldUpdateOperationsInput | string
  width?: Prisma.IntFieldUpdateOperationsInput | number
  height?: Prisma.IntFieldUpdateOperationsInput | number
  aspectRatio?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  frameRate?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  bitrate?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  codec?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  hasAudio?: Prisma.BoolFieldUpdateOperationsInput | boolean
  resolution?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  orientation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  rotation?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  thumbnailCount?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  keyframeTimes?: Prisma.VideoMetadataUpdatekeyframeTimesInput | number[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type VideoMetadataSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  attachmentId?: boolean
  format?: boolean
  width?: boolean
  height?: boolean
  aspectRatio?: boolean
  duration?: boolean
  frameRate?: boolean
  bitrate?: boolean
  codec?: boolean
  hasAudio?: boolean
  resolution?: boolean
  orientation?: boolean
  rotation?: boolean
  thumbnailCount?: boolean
  keyframeTimes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["videoMetadata"]>

export type VideoMetadataSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  attachmentId?: boolean
  format?: boolean
  width?: boolean
  height?: boolean
  aspectRatio?: boolean
  duration?: boolean
  frameRate?: boolean
  bitrate?: boolean
  codec?: boolean
  hasAudio?: boolean
  resolution?: boolean
  orientation?: boolean
  rotation?: boolean
  thumbnailCount?: boolean
  keyframeTimes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["videoMetadata"]>

export type VideoMetadataSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  attachmentId?: boolean
  format?: boolean
  width?: boolean
  height?: boolean
  aspectRatio?: boolean
  duration?: boolean
  frameRate?: boolean
  bitrate?: boolean
  codec?: boolean
  hasAudio?: boolean
  resolution?: boolean
  orientation?: boolean
  rotation?: boolean
  thumbnailCount?: boolean
  keyframeTimes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
}, ExtArgs["result"]["videoMetadata"]>

export type VideoMetadataSelectScalar = {
  attachmentId?: boolean
  format?: boolean
  width?: boolean
  height?: boolean
  aspectRatio?: boolean
  duration?: boolean
  frameRate?: boolean
  bitrate?: boolean
  codec?: boolean
  hasAudio?: boolean
  resolution?: boolean
  orientation?: boolean
  rotation?: boolean
  thumbnailCount?: boolean
  keyframeTimes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type VideoMetadataOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"attachmentId" | "format" | "width" | "height" | "aspectRatio" | "duration" | "frameRate" | "bitrate" | "codec" | "hasAudio" | "resolution" | "orientation" | "rotation" | "thumbnailCount" | "keyframeTimes" | "createdAt" | "updatedAt", ExtArgs["result"]["videoMetadata"]>
export type VideoMetadataInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
}
export type VideoMetadataIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
}
export type VideoMetadataIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  attachment?: boolean | Prisma.AttachmentDefaultArgs<ExtArgs>
}

export type $VideoMetadataPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "VideoMetadata"
  objects: {
    attachment: Prisma.$AttachmentPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    attachmentId: string
    format: string
    width: number
    height: number
    aspectRatio: runtime.Decimal
    duration: number
    frameRate: runtime.Decimal | null
    bitrate: number | null
    codec: string | null
    hasAudio: boolean
    resolution: string | null
    orientation: number | null
    rotation: number | null
    thumbnailCount: number | null
    keyframeTimes: number[]
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["videoMetadata"]>
  composites: {}
}

export type VideoMetadataGetPayload<S extends boolean | null | undefined | VideoMetadataDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload, S>

export type VideoMetadataCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<VideoMetadataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: VideoMetadataCountAggregateInputType | true
  }

export interface VideoMetadataDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VideoMetadata'], meta: { name: 'VideoMetadata' } }
  /**
   * Find zero or one VideoMetadata that matches the filter.
   * @param {VideoMetadataFindUniqueArgs} args - Arguments to find a VideoMetadata
   * @example
   * // Get one VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends VideoMetadataFindUniqueArgs>(args: Prisma.SelectSubset<T, VideoMetadataFindUniqueArgs<ExtArgs>>): Prisma.Prisma__VideoMetadataClient<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one VideoMetadata that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {VideoMetadataFindUniqueOrThrowArgs} args - Arguments to find a VideoMetadata
   * @example
   * // Get one VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends VideoMetadataFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, VideoMetadataFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__VideoMetadataClient<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first VideoMetadata that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VideoMetadataFindFirstArgs} args - Arguments to find a VideoMetadata
   * @example
   * // Get one VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends VideoMetadataFindFirstArgs>(args?: Prisma.SelectSubset<T, VideoMetadataFindFirstArgs<ExtArgs>>): Prisma.Prisma__VideoMetadataClient<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first VideoMetadata that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VideoMetadataFindFirstOrThrowArgs} args - Arguments to find a VideoMetadata
   * @example
   * // Get one VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends VideoMetadataFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, VideoMetadataFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__VideoMetadataClient<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more VideoMetadata that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VideoMetadataFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.findMany()
   * 
   * // Get first 10 VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.findMany({ take: 10 })
   * 
   * // Only select the `attachmentId`
   * const videoMetadataWithAttachmentIdOnly = await prisma.videoMetadata.findMany({ select: { attachmentId: true } })
   * 
   */
  findMany<T extends VideoMetadataFindManyArgs>(args?: Prisma.SelectSubset<T, VideoMetadataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a VideoMetadata.
   * @param {VideoMetadataCreateArgs} args - Arguments to create a VideoMetadata.
   * @example
   * // Create one VideoMetadata
   * const VideoMetadata = await prisma.videoMetadata.create({
   *   data: {
   *     // ... data to create a VideoMetadata
   *   }
   * })
   * 
   */
  create<T extends VideoMetadataCreateArgs>(args: Prisma.SelectSubset<T, VideoMetadataCreateArgs<ExtArgs>>): Prisma.Prisma__VideoMetadataClient<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many VideoMetadata.
   * @param {VideoMetadataCreateManyArgs} args - Arguments to create many VideoMetadata.
   * @example
   * // Create many VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends VideoMetadataCreateManyArgs>(args?: Prisma.SelectSubset<T, VideoMetadataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many VideoMetadata and returns the data saved in the database.
   * @param {VideoMetadataCreateManyAndReturnArgs} args - Arguments to create many VideoMetadata.
   * @example
   * // Create many VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many VideoMetadata and only return the `attachmentId`
   * const videoMetadataWithAttachmentIdOnly = await prisma.videoMetadata.createManyAndReturn({
   *   select: { attachmentId: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends VideoMetadataCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, VideoMetadataCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a VideoMetadata.
   * @param {VideoMetadataDeleteArgs} args - Arguments to delete one VideoMetadata.
   * @example
   * // Delete one VideoMetadata
   * const VideoMetadata = await prisma.videoMetadata.delete({
   *   where: {
   *     // ... filter to delete one VideoMetadata
   *   }
   * })
   * 
   */
  delete<T extends VideoMetadataDeleteArgs>(args: Prisma.SelectSubset<T, VideoMetadataDeleteArgs<ExtArgs>>): Prisma.Prisma__VideoMetadataClient<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one VideoMetadata.
   * @param {VideoMetadataUpdateArgs} args - Arguments to update one VideoMetadata.
   * @example
   * // Update one VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends VideoMetadataUpdateArgs>(args: Prisma.SelectSubset<T, VideoMetadataUpdateArgs<ExtArgs>>): Prisma.Prisma__VideoMetadataClient<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more VideoMetadata.
   * @param {VideoMetadataDeleteManyArgs} args - Arguments to filter VideoMetadata to delete.
   * @example
   * // Delete a few VideoMetadata
   * const { count } = await prisma.videoMetadata.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends VideoMetadataDeleteManyArgs>(args?: Prisma.SelectSubset<T, VideoMetadataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more VideoMetadata.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VideoMetadataUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends VideoMetadataUpdateManyArgs>(args: Prisma.SelectSubset<T, VideoMetadataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more VideoMetadata and returns the data updated in the database.
   * @param {VideoMetadataUpdateManyAndReturnArgs} args - Arguments to update many VideoMetadata.
   * @example
   * // Update many VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more VideoMetadata and only return the `attachmentId`
   * const videoMetadataWithAttachmentIdOnly = await prisma.videoMetadata.updateManyAndReturn({
   *   select: { attachmentId: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends VideoMetadataUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, VideoMetadataUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one VideoMetadata.
   * @param {VideoMetadataUpsertArgs} args - Arguments to update or create a VideoMetadata.
   * @example
   * // Update or create a VideoMetadata
   * const videoMetadata = await prisma.videoMetadata.upsert({
   *   create: {
   *     // ... data to create a VideoMetadata
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the VideoMetadata we want to update
   *   }
   * })
   */
  upsert<T extends VideoMetadataUpsertArgs>(args: Prisma.SelectSubset<T, VideoMetadataUpsertArgs<ExtArgs>>): Prisma.Prisma__VideoMetadataClient<runtime.Types.Result.GetResult<Prisma.$VideoMetadataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of VideoMetadata.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VideoMetadataCountArgs} args - Arguments to filter VideoMetadata to count.
   * @example
   * // Count the number of VideoMetadata
   * const count = await prisma.videoMetadata.count({
   *   where: {
   *     // ... the filter for the VideoMetadata we want to count
   *   }
   * })
  **/
  count<T extends VideoMetadataCountArgs>(
    args?: Prisma.Subset<T, VideoMetadataCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], VideoMetadataCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a VideoMetadata.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VideoMetadataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends VideoMetadataAggregateArgs>(args: Prisma.Subset<T, VideoMetadataAggregateArgs>): Prisma.PrismaPromise<GetVideoMetadataAggregateType<T>>

  /**
   * Group by VideoMetadata.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {VideoMetadataGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends VideoMetadataGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: VideoMetadataGroupByArgs['orderBy'] }
      : { orderBy?: VideoMetadataGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, VideoMetadataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVideoMetadataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the VideoMetadata model
 */
readonly fields: VideoMetadataFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for VideoMetadata.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__VideoMetadataClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  attachment<T extends Prisma.AttachmentDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.AttachmentDefaultArgs<ExtArgs>>): Prisma.Prisma__AttachmentClient<runtime.Types.Result.GetResult<Prisma.$AttachmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the VideoMetadata model
 */
export interface VideoMetadataFieldRefs {
  readonly attachmentId: Prisma.FieldRef<"VideoMetadata", 'String'>
  readonly format: Prisma.FieldRef<"VideoMetadata", 'String'>
  readonly width: Prisma.FieldRef<"VideoMetadata", 'Int'>
  readonly height: Prisma.FieldRef<"VideoMetadata", 'Int'>
  readonly aspectRatio: Prisma.FieldRef<"VideoMetadata", 'Decimal'>
  readonly duration: Prisma.FieldRef<"VideoMetadata", 'Int'>
  readonly frameRate: Prisma.FieldRef<"VideoMetadata", 'Decimal'>
  readonly bitrate: Prisma.FieldRef<"VideoMetadata", 'Int'>
  readonly codec: Prisma.FieldRef<"VideoMetadata", 'String'>
  readonly hasAudio: Prisma.FieldRef<"VideoMetadata", 'Boolean'>
  readonly resolution: Prisma.FieldRef<"VideoMetadata", 'String'>
  readonly orientation: Prisma.FieldRef<"VideoMetadata", 'Int'>
  readonly rotation: Prisma.FieldRef<"VideoMetadata", 'Int'>
  readonly thumbnailCount: Prisma.FieldRef<"VideoMetadata", 'Int'>
  readonly keyframeTimes: Prisma.FieldRef<"VideoMetadata", 'Int[]'>
  readonly createdAt: Prisma.FieldRef<"VideoMetadata", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"VideoMetadata", 'DateTime'>
}
    

// Custom InputTypes
/**
 * VideoMetadata findUnique
 */
export type VideoMetadataFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
  /**
   * Filter, which VideoMetadata to fetch.
   */
  where: Prisma.VideoMetadataWhereUniqueInput
}

/**
 * VideoMetadata findUniqueOrThrow
 */
export type VideoMetadataFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
  /**
   * Filter, which VideoMetadata to fetch.
   */
  where: Prisma.VideoMetadataWhereUniqueInput
}

/**
 * VideoMetadata findFirst
 */
export type VideoMetadataFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
  /**
   * Filter, which VideoMetadata to fetch.
   */
  where?: Prisma.VideoMetadataWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VideoMetadata to fetch.
   */
  orderBy?: Prisma.VideoMetadataOrderByWithRelationInput | Prisma.VideoMetadataOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for VideoMetadata.
   */
  cursor?: Prisma.VideoMetadataWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VideoMetadata from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VideoMetadata.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of VideoMetadata.
   */
  distinct?: Prisma.VideoMetadataScalarFieldEnum | Prisma.VideoMetadataScalarFieldEnum[]
}

/**
 * VideoMetadata findFirstOrThrow
 */
export type VideoMetadataFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
  /**
   * Filter, which VideoMetadata to fetch.
   */
  where?: Prisma.VideoMetadataWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VideoMetadata to fetch.
   */
  orderBy?: Prisma.VideoMetadataOrderByWithRelationInput | Prisma.VideoMetadataOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for VideoMetadata.
   */
  cursor?: Prisma.VideoMetadataWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VideoMetadata from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VideoMetadata.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of VideoMetadata.
   */
  distinct?: Prisma.VideoMetadataScalarFieldEnum | Prisma.VideoMetadataScalarFieldEnum[]
}

/**
 * VideoMetadata findMany
 */
export type VideoMetadataFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
  /**
   * Filter, which VideoMetadata to fetch.
   */
  where?: Prisma.VideoMetadataWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of VideoMetadata to fetch.
   */
  orderBy?: Prisma.VideoMetadataOrderByWithRelationInput | Prisma.VideoMetadataOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing VideoMetadata.
   */
  cursor?: Prisma.VideoMetadataWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` VideoMetadata from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` VideoMetadata.
   */
  skip?: number
  distinct?: Prisma.VideoMetadataScalarFieldEnum | Prisma.VideoMetadataScalarFieldEnum[]
}

/**
 * VideoMetadata create
 */
export type VideoMetadataCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
  /**
   * The data needed to create a VideoMetadata.
   */
  data: Prisma.XOR<Prisma.VideoMetadataCreateInput, Prisma.VideoMetadataUncheckedCreateInput>
}

/**
 * VideoMetadata createMany
 */
export type VideoMetadataCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many VideoMetadata.
   */
  data: Prisma.VideoMetadataCreateManyInput | Prisma.VideoMetadataCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * VideoMetadata createManyAndReturn
 */
export type VideoMetadataCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * The data used to create many VideoMetadata.
   */
  data: Prisma.VideoMetadataCreateManyInput | Prisma.VideoMetadataCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * VideoMetadata update
 */
export type VideoMetadataUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
  /**
   * The data needed to update a VideoMetadata.
   */
  data: Prisma.XOR<Prisma.VideoMetadataUpdateInput, Prisma.VideoMetadataUncheckedUpdateInput>
  /**
   * Choose, which VideoMetadata to update.
   */
  where: Prisma.VideoMetadataWhereUniqueInput
}

/**
 * VideoMetadata updateMany
 */
export type VideoMetadataUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update VideoMetadata.
   */
  data: Prisma.XOR<Prisma.VideoMetadataUpdateManyMutationInput, Prisma.VideoMetadataUncheckedUpdateManyInput>
  /**
   * Filter which VideoMetadata to update
   */
  where?: Prisma.VideoMetadataWhereInput
  /**
   * Limit how many VideoMetadata to update.
   */
  limit?: number
}

/**
 * VideoMetadata updateManyAndReturn
 */
export type VideoMetadataUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * The data used to update VideoMetadata.
   */
  data: Prisma.XOR<Prisma.VideoMetadataUpdateManyMutationInput, Prisma.VideoMetadataUncheckedUpdateManyInput>
  /**
   * Filter which VideoMetadata to update
   */
  where?: Prisma.VideoMetadataWhereInput
  /**
   * Limit how many VideoMetadata to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * VideoMetadata upsert
 */
export type VideoMetadataUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
  /**
   * The filter to search for the VideoMetadata to update in case it exists.
   */
  where: Prisma.VideoMetadataWhereUniqueInput
  /**
   * In case the VideoMetadata found by the `where` argument doesn't exist, create a new VideoMetadata with this data.
   */
  create: Prisma.XOR<Prisma.VideoMetadataCreateInput, Prisma.VideoMetadataUncheckedCreateInput>
  /**
   * In case the VideoMetadata was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.VideoMetadataUpdateInput, Prisma.VideoMetadataUncheckedUpdateInput>
}

/**
 * VideoMetadata delete
 */
export type VideoMetadataDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
  /**
   * Filter which VideoMetadata to delete.
   */
  where: Prisma.VideoMetadataWhereUniqueInput
}

/**
 * VideoMetadata deleteMany
 */
export type VideoMetadataDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which VideoMetadata to delete
   */
  where?: Prisma.VideoMetadataWhereInput
  /**
   * Limit how many VideoMetadata to delete.
   */
  limit?: number
}

/**
 * VideoMetadata without action
 */
export type VideoMetadataDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the VideoMetadata
   */
  select?: Prisma.VideoMetadataSelect<ExtArgs> | null
  /**
   * Omit specific fields from the VideoMetadata
   */
  omit?: Prisma.VideoMetadataOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.VideoMetadataInclude<ExtArgs> | null
}
