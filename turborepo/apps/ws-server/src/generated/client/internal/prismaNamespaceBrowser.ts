
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"
export type * from '../models.ts'
export type * from './prismaNamespace.ts'
export const Decimal = runtime.Decimal
export const ModelName = {
  User: 'User',
  Profile: 'Profile',
  Account: 'Account',
  Session: 'Session',
  UserKey: 'UserKey',
  Settings: 'Settings',
  Conversation: 'Conversation',
  ConversationSettings: 'ConversationSettings',
  Message: 'Message',
  Attachment: 'Attachment',
  AttachmentProvider: 'AttachmentProvider',
  ImageMetadata: 'ImageMetadata',
  VideoMetadata: 'VideoMetadata',
  AudioMetadata: 'AudioMetadata',
  DocumentMetadata: 'DocumentMetadata',
  VerificationToken: 'VerificationToken'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/**
 * Enums
 */
export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const ProfileScalarFieldEnum = {
  id: 'id',
  bio: 'bio',
  city: 'city',
  region: 'region',
  country: 'country',
  postalCode: 'postalCode',
  lat: 'lat',
  lng: 'lng',
  timezone: 'timezone',
  userId: 'userId'
} as const

export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


export const AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
} as const

export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


export const SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


export const UserKeyScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  apiKey: 'apiKey',
  iv: 'iv',
  authTag: 'authTag',
  label: 'label',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isDefault: 'isDefault'
} as const

export type UserKeyScalarFieldEnum = (typeof UserKeyScalarFieldEnum)[keyof typeof UserKeyScalarFieldEnum]


export const SettingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  theme: 'theme',
  defaultProvider: 'defaultProvider',
  defaultModel: 'defaultModel'
} as const

export type SettingsScalarFieldEnum = (typeof SettingsScalarFieldEnum)[keyof typeof SettingsScalarFieldEnum]


export const ConversationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  userKeyId: 'userKeyId',
  title: 'title',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  branchId: 'branchId',
  parentId: 'parentId',
  isShared: 'isShared',
  shareToken: 'shareToken'
} as const

export type ConversationScalarFieldEnum = (typeof ConversationScalarFieldEnum)[keyof typeof ConversationScalarFieldEnum]


export const ConversationSettingsScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  systemPrompt: 'systemPrompt',
  enableThinking: 'enableThinking',
  trackUsage: 'trackUsage',
  enableWebSearch: 'enableWebSearch',
  enableAssetGen: 'enableAssetGen',
  maxTokens: 'maxTokens',
  usageAlerts: 'usageAlerts',
  temperature: 'temperature',
  topP: 'topP',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ConversationSettingsScalarFieldEnum = (typeof ConversationSettingsScalarFieldEnum)[keyof typeof ConversationSettingsScalarFieldEnum]


export const MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  userId: 'userId',
  senderType: 'senderType',
  provider: 'provider',
  model: 'model',
  userKeyId: 'userKeyId',
  content: 'content',
  thinkingText: 'thinkingText',
  thinkingDuration: 'thinkingDuration',
  liked: 'liked',
  disliked: 'disliked',
  tryAgain: 'tryAgain',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


export const AttachmentScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  draftId: 'draftId',
  batchId: 'batchId',
  userId: 'userId',
  messageId: 'messageId',
  s3ObjectId: 's3ObjectId',
  origin: 'origin',
  status: 'status',
  uploadMethod: 'uploadMethod',
  assetType: 'assetType',
  uploadDuration: 'uploadDuration',
  cdnUrl: 'cdnUrl',
  publicUrl: 'publicUrl',
  sourceUrl: 'sourceUrl',
  thumbnailKey: 'thumbnailKey',
  bucket: 'bucket',
  key: 'key',
  versionId: 'versionId',
  region: 'region',
  cacheControl: 'cacheControl',
  contentDisposition: 'contentDisposition',
  contentEncoding: 'contentEncoding',
  expiresAt: 'expiresAt',
  size: 'size',
  filename: 'filename',
  ext: 'ext',
  mime: 'mime',
  etag: 'etag',
  checksumAlgo: 'checksumAlgo',
  checksumSha256: 'checksumSha256',
  storageClass: 'storageClass',
  sseAlgorithm: 'sseAlgorithm',
  sseKmsKeyId: 'sseKmsKeyId',
  s3LastModified: 's3LastModified',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AttachmentScalarFieldEnum = (typeof AttachmentScalarFieldEnum)[keyof typeof AttachmentScalarFieldEnum]


export const AttachmentProviderScalarFieldEnum = {
  id: 'id',
  attachmentId: 'attachmentId',
  provider: 'provider',
  userKeyId: 'userKeyId',
  keyFingerprint: 'keyFingerprint',
  state: 'state',
  providerUri: 'providerUri',
  providerRef: 'providerRef',
  mime: 'mime',
  size: 'size',
  readyAt: 'readyAt',
  expiresAt: 'expiresAt',
  lastCheckedAt: 'lastCheckedAt',
  errorCode: 'errorCode',
  errorMessage: 'errorMessage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AttachmentProviderScalarFieldEnum = (typeof AttachmentProviderScalarFieldEnum)[keyof typeof AttachmentProviderScalarFieldEnum]


export const ImageMetadataScalarFieldEnum = {
  attachmentId: 'attachmentId',
  format: 'format',
  width: 'width',
  height: 'height',
  aspectRatio: 'aspectRatio',
  frames: 'frames',
  hasAlpha: 'hasAlpha',
  animated: 'animated',
  orientation: 'orientation',
  colorSpace: 'colorSpace',
  exifDateTimeOriginal: 'exifDateTimeOriginal',
  cameraMake: 'cameraMake',
  cameraModel: 'cameraModel',
  lensModel: 'lensModel',
  gpsLat: 'gpsLat',
  gpsLon: 'gpsLon',
  dominantColorHex: 'dominantColorHex',
  iccProfile: 'iccProfile',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ImageMetadataScalarFieldEnum = (typeof ImageMetadataScalarFieldEnum)[keyof typeof ImageMetadataScalarFieldEnum]


export const VideoMetadataScalarFieldEnum = {
  attachmentId: 'attachmentId',
  format: 'format',
  width: 'width',
  height: 'height',
  aspectRatio: 'aspectRatio',
  duration: 'duration',
  frameRate: 'frameRate',
  bitrate: 'bitrate',
  codec: 'codec',
  hasAudio: 'hasAudio',
  resolution: 'resolution',
  orientation: 'orientation',
  rotation: 'rotation',
  thumbnailCount: 'thumbnailCount',
  keyframeTimes: 'keyframeTimes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type VideoMetadataScalarFieldEnum = (typeof VideoMetadataScalarFieldEnum)[keyof typeof VideoMetadataScalarFieldEnum]


export const AudioMetadataScalarFieldEnum = {
  attachmentId: 'attachmentId',
  format: 'format',
  duration: 'duration',
  bitrate: 'bitrate',
  sampleRate: 'sampleRate',
  channels: 'channels',
  codec: 'codec',
  title: 'title',
  artist: 'artist',
  album: 'album',
  year: 'year',
  genre: 'genre',
  waveformPeaks: 'waveformPeaks',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AudioMetadataScalarFieldEnum = (typeof AudioMetadataScalarFieldEnum)[keyof typeof AudioMetadataScalarFieldEnum]


export const DocumentMetadataScalarFieldEnum = {
  attachmentId: 'attachmentId',
  format: 'format',
  pageCount: 'pageCount',
  wordCount: 'wordCount',
  language: 'language',
  title: 'title',
  author: 'author',
  subject: 'subject',
  keywords: 'keywords',
  pdfVersion: 'pdfVersion',
  isEncrypted: 'isEncrypted',
  isSearchable: 'isSearchable',
  encoding: 'encoding',
  lineCount: 'lineCount',
  textPreview: 'textPreview',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type DocumentMetadataScalarFieldEnum = (typeof DocumentMetadataScalarFieldEnum)[keyof typeof DocumentMetadataScalarFieldEnum]


export const VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
} as const

export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

